(function() {var implementors = {};
implementors["anyhow"] = [{"text":"impl AsRef&lt;dyn Error + 'static + Sync + Send&gt; for Error","synthetic":false,"types":[]},{"text":"impl AsRef&lt;dyn Error + 'static&gt; for Error","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L, R, Target&gt; AsRef&lt;Target&gt; for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: AsRef&lt;Target&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: AsRef&lt;Target&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;L, R&gt; AsRef&lt;str&gt; for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: AsRef&lt;str&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: AsRef&lt;str&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;L, R, Target&gt; AsRef&lt;[Target]&gt; for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: AsRef&lt;[Target]&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: AsRef&lt;[Target]&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["glib"] = [{"text":"impl AsRef&lt;[u8]&gt; for ByteArray","synthetic":false,"types":[]},{"text":"impl AsRef&lt;[u8]&gt; for Bytes","synthetic":false,"types":[]},{"text":"impl AsRef&lt;[u8]&gt; for String","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; AsRef&lt;T&gt; for Borrowed&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl AsRef&lt;str&gt; for GString","synthetic":false,"types":[]},{"text":"impl AsRef&lt;OsStr&gt; for GString","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;SendUnique&gt; AsRef&lt;T&gt; for Ref&lt;'a, T&gt;","synthetic":false,"types":[]}];
implementors["gstreamer"] = [{"text":"impl AsRef&lt;MessageRef&gt; for Message","synthetic":false,"types":[]},{"text":"impl AsRef&lt;Ratio&lt;i32&gt;&gt; for Fraction","synthetic":false,"types":[]},{"text":"impl AsRef&lt;StructureRef&gt; for Structure","synthetic":false,"types":[]},{"text":"impl AsRef&lt;CapsRef&gt; for Caps","synthetic":false,"types":[]},{"text":"impl AsRef&lt;CapsFeaturesRef&gt; for CapsFeatures","synthetic":false,"types":[]},{"text":"impl AsRef&lt;TagListRef&gt; for TagList","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;MetaAPI&gt; AsRef&lt;MetaRef&lt;'a, T&gt;&gt; for MetaRef&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;MetaAPI, U&gt; AsRef&lt;MetaRef&lt;'a, T&gt;&gt; for MetaRefMut&lt;'a, T, U&gt;","synthetic":false,"types":[]},{"text":"impl AsRef&lt;BufferRef&gt; for Buffer","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; AsRef&lt;[u8]&gt; for BufferMap&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; AsRef&lt;[u8]&gt; for MappedBuffer&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl AsRef&lt;MemoryRef&gt; for Memory","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; AsRef&lt;[u8]&gt; for MemoryMap&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; AsRef&lt;[u8]&gt; for MappedMemory&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl AsRef&lt;SampleRef&gt; for Sample","synthetic":false,"types":[]},{"text":"impl AsRef&lt;BufferListRef&gt; for BufferList","synthetic":false,"types":[]},{"text":"impl AsRef&lt;QueryRef&gt; for Query","synthetic":false,"types":[]},{"text":"impl AsRef&lt;EventRef&gt; for Event","synthetic":false,"types":[]},{"text":"impl AsRef&lt;ContextRef&gt; for Context","synthetic":false,"types":[]},{"text":"impl AsRef&lt;Option&lt;u64&gt;&gt; for Default","synthetic":false,"types":[]},{"text":"impl AsRef&lt;Option&lt;u64&gt;&gt; for Bytes","synthetic":false,"types":[]},{"text":"impl AsRef&lt;Option&lt;u64&gt;&gt; for ClockTime","synthetic":false,"types":[]},{"text":"impl AsRef&lt;Option&lt;u64&gt;&gt; for Buffers","synthetic":false,"types":[]},{"text":"impl AsRef&lt;i64&gt; for Undefined","synthetic":false,"types":[]},{"text":"impl AsRef&lt;Option&lt;u32&gt;&gt; for Percent","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;FormattedValue&gt; AsRef&lt;FormattedSegment&lt;GenericFormattedValue&gt;&gt; for FormattedSegment&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl AsRef&lt;TocRef&gt; for Toc","synthetic":false,"types":[]},{"text":"impl AsRef&lt;TocEntryRef&gt; for TocEntry","synthetic":false,"types":[]},{"text":"impl AsRef&lt;StructureRef&gt; for BufferPoolConfig","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()