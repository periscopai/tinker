(function() {var implementors = {};
implementors["glib"] = [{"text":"impl BitOrAssign&lt;FileTest&gt; for FileTest","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;FormatSizeFlags&gt; for FormatSizeFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;IOCondition&gt; for IOCondition","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;KeyFileFlags&gt; for KeyFileFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;LogLevelFlags&gt; for LogLevelFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;OptionFlags&gt; for OptionFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;SpawnFlags&gt; for SpawnFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;BindingFlags&gt; for BindingFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;ParamFlags&gt; for ParamFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;SignalFlags&gt; for SignalFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;LogLevels&gt; for LogLevels","synthetic":false,"types":[]}];
implementors["gstreamer"] = [{"text":"impl BitOrAssign&lt;BinFlags&gt; for BinFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;BufferCopyFlags&gt; for BufferCopyFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;BufferFlags&gt; for BufferFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;BufferPoolAcquireFlags&gt; for BufferPoolAcquireFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;ClockFlags&gt; for ClockFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;DebugColorFlags&gt; for DebugColorFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;DebugGraphDetails&gt; for DebugGraphDetails","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;ElementFlags&gt; for ElementFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;MemoryFlags&gt; for MemoryFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;ObjectFlags&gt; for ObjectFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;PadFlags&gt; for PadFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;PadLinkCheck&gt; for PadLinkCheck","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;PadProbeType&gt; for PadProbeType","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;ParseFlags&gt; for ParseFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;PipelineFlags&gt; for PipelineFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;PluginDependencyFlags&gt; for PluginDependencyFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;PluginFlags&gt; for PluginFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;SchedulingFlags&gt; for SchedulingFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;SeekFlags&gt; for SeekFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;SegmentFlags&gt; for SegmentFlags","synthetic":false,"types":[]},{"text":"impl BitOrAssign&lt;StreamFlags&gt; for StreamFlags","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()