(function() {var implementors = {};
implementors["ansi_term"] = [{"text":"impl Clone for Prefix","synthetic":false,"types":[]},{"text":"impl Clone for Infix","synthetic":false,"types":[]},{"text":"impl Clone for Suffix","synthetic":false,"types":[]},{"text":"impl Clone for Style","synthetic":false,"types":[]},{"text":"impl Clone for Colour","synthetic":false,"types":[]},{"text":"impl&lt;'a, S:&nbsp;'a + ToOwned + ?Sized&gt; Clone for ANSIGenericString&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ToOwned&gt;::Owned: Debug,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["anyhow"] = [{"text":"impl&lt;'a&gt; Clone for Chain&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["atty"] = [{"text":"impl Clone for Stream","synthetic":false,"types":[]}];
implementors["clap"] = [{"text":"impl Clone for AppSettings","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; Clone for App&lt;'a, 'b&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; Clone for Arg&lt;'a, 'b&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'a: 'b,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ArgMatches&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Values&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for OsValues&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ArgGroup&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ArgSettings","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for SubCommand&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Shell","synthetic":false,"types":[]},{"text":"impl Clone for ErrorKind","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L:&nbsp;Clone, R:&nbsp;Clone&gt; Clone for Either&lt;L, R&gt;","synthetic":false,"types":[]}];
implementors["futures_channel"] = [{"text":"impl Clone for SendError","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for TrySendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for Sender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for UnboundedSender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Canceled","synthetic":false,"types":[]}];
implementors["futures_executor"] = [{"text":"impl Clone for LocalSpawner","synthetic":false,"types":[]}];
implementors["futures_util"] = [{"text":"impl&lt;Fut&gt; Clone for Shared&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Future,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for Pending&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Clone&gt; Clone for OptionFuture&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Ready&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone, B:&nbsp;Clone&gt; Clone for Either&lt;A, B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut:&nbsp;Clone&gt; Clone for Abortable&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl Clone for AbortHandle","synthetic":false,"types":[]},{"text":"impl Clone for Aborted","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Iter&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Repeat&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for Empty&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for Pending&lt;T&gt;","synthetic":false,"types":[]}];
implementors["glib"] = [{"text":"impl&lt;T:&nbsp;'static, MM:&nbsp;BoxedMemoryManager&lt;T&gt;&gt; Clone for Boxed&lt;T, MM&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, MM:&nbsp;SharedMemoryManager&lt;T&gt;&gt; Clone for Shared&lt;T, MM&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for BoolError","synthetic":false,"types":[]},{"text":"impl Clone for ObjectRef","synthetic":false,"types":[]},{"text":"impl Clone for Object","synthetic":false,"types":[]},{"text":"impl Clone for InitiallyUnowned","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;ObjectType&gt; Clone for WeakRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;ObjectType&gt; Clone for SendWeakRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Checksum","synthetic":false,"types":[]},{"text":"impl Clone for DateTime","synthetic":false,"types":[]},{"text":"impl Clone for KeyFile","synthetic":false,"types":[]},{"text":"impl Clone for MainContext","synthetic":false,"types":[]},{"text":"impl Clone for MainLoop","synthetic":false,"types":[]},{"text":"impl Clone for Source","synthetic":false,"types":[]},{"text":"impl Clone for TimeZone","synthetic":false,"types":[]},{"text":"impl Clone for ChecksumType","synthetic":false,"types":[]},{"text":"impl Clone for DateMonth","synthetic":false,"types":[]},{"text":"impl Clone for DateWeekday","synthetic":false,"types":[]},{"text":"impl Clone for KeyFileError","synthetic":false,"types":[]},{"text":"impl Clone for OptionArg","synthetic":false,"types":[]},{"text":"impl Clone for SeekType","synthetic":false,"types":[]},{"text":"impl Clone for TimeType","synthetic":false,"types":[]},{"text":"impl Clone for FileTest","synthetic":false,"types":[]},{"text":"impl Clone for FormatSizeFlags","synthetic":false,"types":[]},{"text":"impl Clone for IOCondition","synthetic":false,"types":[]},{"text":"impl Clone for KeyFileFlags","synthetic":false,"types":[]},{"text":"impl Clone for LogLevelFlags","synthetic":false,"types":[]},{"text":"impl Clone for OptionFlags","synthetic":false,"types":[]},{"text":"impl Clone for SpawnFlags","synthetic":false,"types":[]},{"text":"impl Clone for Binding","synthetic":false,"types":[]},{"text":"impl Clone for BindingFlags","synthetic":false,"types":[]},{"text":"impl Clone for ParamFlags","synthetic":false,"types":[]},{"text":"impl Clone for SignalFlags","synthetic":false,"types":[]},{"text":"impl Clone for ByteArray","synthetic":false,"types":[]},{"text":"impl Clone for Bytes","synthetic":false,"types":[]},{"text":"impl Clone for Char","synthetic":false,"types":[]},{"text":"impl Clone for UChar","synthetic":false,"types":[]},{"text":"impl Clone for String","synthetic":false,"types":[]},{"text":"impl Clone for Closure","synthetic":false,"types":[]},{"text":"impl Clone for UserDirectory","synthetic":false,"types":[]},{"text":"impl Clone for EnumClass","synthetic":false,"types":[]},{"text":"impl Clone for EnumValue","synthetic":false,"types":[]},{"text":"impl Clone for FlagsClass","synthetic":false,"types":[]},{"text":"impl Clone for FlagsValue","synthetic":false,"types":[]},{"text":"impl Clone for FileError","synthetic":false,"types":[]},{"text":"impl Clone for Inhibit","synthetic":false,"types":[]},{"text":"impl Clone for Pid","synthetic":false,"types":[]},{"text":"impl Clone for Continue","synthetic":false,"types":[]},{"text":"impl Clone for Priority","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for Sender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for SyncSender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for GetError","synthetic":false,"types":[]},{"text":"impl Clone for Value","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for TypedValue&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for SendValue","synthetic":false,"types":[]},{"text":"impl Clone for Variant","synthetic":false,"types":[]},{"text":"impl Clone for VariantDict","synthetic":false,"types":[]},{"text":"impl Clone for VariantType","synthetic":false,"types":[]},{"text":"impl Clone for Date","synthetic":false,"types":[]},{"text":"impl Clone for ValueArray","synthetic":false,"types":[]},{"text":"impl Clone for ParamSpec","synthetic":false,"types":[]},{"text":"impl Clone for Quark","synthetic":false,"types":[]},{"text":"impl Clone for LogLevel","synthetic":false,"types":[]},{"text":"impl Clone for LogLevels","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Property&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + BoxedType&gt; Clone for Boxed&lt;T&gt;","synthetic":false,"types":[]}];
implementors["glib_sys"] = [{"text":"impl Clone for GPollFD","synthetic":false,"types":[]},{"text":"impl Clone for GMutex","synthetic":false,"types":[]},{"text":"impl Clone for GTokenValue","synthetic":false,"types":[]},{"text":"impl Clone for GVariantBuilder_u","synthetic":false,"types":[]},{"text":"impl Clone for GVariantDict_u","synthetic":false,"types":[]},{"text":"impl Clone for GArray","synthetic":false,"types":[]},{"text":"impl Clone for GByteArray","synthetic":false,"types":[]},{"text":"impl Clone for GCond","synthetic":false,"types":[]},{"text":"impl Clone for GDebugKey","synthetic":false,"types":[]},{"text":"impl Clone for GError","synthetic":false,"types":[]},{"text":"impl Clone for GHashTableIter","synthetic":false,"types":[]},{"text":"impl Clone for GHook","synthetic":false,"types":[]},{"text":"impl Clone for GHookList","synthetic":false,"types":[]},{"text":"impl Clone for GIOFuncs","synthetic":false,"types":[]},{"text":"impl Clone for GList","synthetic":false,"types":[]},{"text":"impl Clone for GLogField","synthetic":false,"types":[]},{"text":"impl Clone for GMarkupParser","synthetic":false,"types":[]},{"text":"impl Clone for GMemVTable","synthetic":false,"types":[]},{"text":"impl Clone for GNode","synthetic":false,"types":[]},{"text":"impl Clone for GOnce","synthetic":false,"types":[]},{"text":"impl Clone for GOptionEntry","synthetic":false,"types":[]},{"text":"impl Clone for GPrivate","synthetic":false,"types":[]},{"text":"impl Clone for GPtrArray","synthetic":false,"types":[]},{"text":"impl Clone for GQueue","synthetic":false,"types":[]},{"text":"impl Clone for GRWLock","synthetic":false,"types":[]},{"text":"impl Clone for GRecMutex","synthetic":false,"types":[]},{"text":"impl Clone for GSList","synthetic":false,"types":[]},{"text":"impl Clone for GScanner","synthetic":false,"types":[]},{"text":"impl Clone for GSource","synthetic":false,"types":[]},{"text":"impl Clone for GSourceCallbackFuncs","synthetic":false,"types":[]},{"text":"impl Clone for GSourceFuncs","synthetic":false,"types":[]},{"text":"impl Clone for GString","synthetic":false,"types":[]},{"text":"impl Clone for GTestConfig","synthetic":false,"types":[]},{"text":"impl Clone for GTestLogBuffer","synthetic":false,"types":[]},{"text":"impl Clone for GThreadPool","synthetic":false,"types":[]},{"text":"impl Clone for GTimeVal","synthetic":false,"types":[]},{"text":"impl Clone for GTrashStack","synthetic":false,"types":[]},{"text":"impl Clone for GVariantBuilder","synthetic":false,"types":[]},{"text":"impl Clone for GVariantBuilder_u_s","synthetic":false,"types":[]},{"text":"impl Clone for GVariantDict","synthetic":false,"types":[]},{"text":"impl Clone for GVariantDict_u_s","synthetic":false,"types":[]},{"text":"impl Clone for GVariantIter","synthetic":false,"types":[]}];
implementors["gobject_sys"] = [{"text":"impl Clone for GValue_data","synthetic":false,"types":[]},{"text":"impl Clone for GWeakRef_priv","synthetic":false,"types":[]},{"text":"impl Clone for GClosureNotifyData","synthetic":false,"types":[]},{"text":"impl Clone for GEnumClass","synthetic":false,"types":[]},{"text":"impl Clone for GEnumValue","synthetic":false,"types":[]},{"text":"impl Clone for GFlagsClass","synthetic":false,"types":[]},{"text":"impl Clone for GFlagsValue","synthetic":false,"types":[]},{"text":"impl Clone for GInitiallyUnownedClass","synthetic":false,"types":[]},{"text":"impl Clone for GInterfaceInfo","synthetic":false,"types":[]},{"text":"impl Clone for GObjectClass","synthetic":false,"types":[]},{"text":"impl Clone for GObjectConstructParam","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecClass","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecTypeInfo","synthetic":false,"types":[]},{"text":"impl Clone for GParameter","synthetic":false,"types":[]},{"text":"impl Clone for GSignalInvocationHint","synthetic":false,"types":[]},{"text":"impl Clone for GSignalQuery","synthetic":false,"types":[]},{"text":"impl Clone for GTypeClass","synthetic":false,"types":[]},{"text":"impl Clone for GTypeFundamentalInfo","synthetic":false,"types":[]},{"text":"impl Clone for GTypeInfo","synthetic":false,"types":[]},{"text":"impl Clone for GTypeInstance","synthetic":false,"types":[]},{"text":"impl Clone for GTypeInterface","synthetic":false,"types":[]},{"text":"impl Clone for GTypeModuleClass","synthetic":false,"types":[]},{"text":"impl Clone for GTypePluginClass","synthetic":false,"types":[]},{"text":"impl Clone for GTypeQuery","synthetic":false,"types":[]},{"text":"impl Clone for GTypeValueTable","synthetic":false,"types":[]},{"text":"impl Clone for GValue","synthetic":false,"types":[]},{"text":"impl Clone for GValueArray","synthetic":false,"types":[]},{"text":"impl Clone for GWeakRef","synthetic":false,"types":[]},{"text":"impl Clone for GInitiallyUnowned","synthetic":false,"types":[]},{"text":"impl Clone for GObject","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpec","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecBoolean","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecBoxed","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecChar","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecDouble","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecEnum","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecFlags","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecFloat","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecGType","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecInt","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecInt64","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecLong","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecObject","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecOverride","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecParam","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecPointer","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecUChar","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecUInt","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecUInt64","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecULong","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecUnichar","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecValueArray","synthetic":false,"types":[]},{"text":"impl Clone for GParamSpecVariant","synthetic":false,"types":[]},{"text":"impl Clone for GTypeModule","synthetic":false,"types":[]}];
implementors["gstreamer"] = [{"text":"impl Clone for Allocator","synthetic":false,"types":[]},{"text":"impl Clone for Bin","synthetic":false,"types":[]},{"text":"impl Clone for BufferPool","synthetic":false,"types":[]},{"text":"impl Clone for Bus","synthetic":false,"types":[]},{"text":"impl Clone for ChildProxy","synthetic":false,"types":[]},{"text":"impl Clone for Clock","synthetic":false,"types":[]},{"text":"impl Clone for Device","synthetic":false,"types":[]},{"text":"impl Clone for DeviceMonitor","synthetic":false,"types":[]},{"text":"impl Clone for DeviceProvider","synthetic":false,"types":[]},{"text":"impl Clone for DeviceProviderFactory","synthetic":false,"types":[]},{"text":"impl Clone for Element","synthetic":false,"types":[]},{"text":"impl Clone for ElementFactory","synthetic":false,"types":[]},{"text":"impl Clone for GhostPad","synthetic":false,"types":[]},{"text":"impl Clone for Object","synthetic":false,"types":[]},{"text":"impl Clone for Pad","synthetic":false,"types":[]},{"text":"impl Clone for PadTemplate","synthetic":false,"types":[]},{"text":"impl Clone for Pipeline","synthetic":false,"types":[]},{"text":"impl Clone for Plugin","synthetic":false,"types":[]},{"text":"impl Clone for PluginFeature","synthetic":false,"types":[]},{"text":"impl Clone for Preset","synthetic":false,"types":[]},{"text":"impl Clone for ProxyPad","synthetic":false,"types":[]},{"text":"impl Clone for Registry","synthetic":false,"types":[]},{"text":"impl Clone for SystemClock","synthetic":false,"types":[]},{"text":"impl Clone for TagSetter","synthetic":false,"types":[]},{"text":"impl Clone for TocSetter","synthetic":false,"types":[]},{"text":"impl Clone for TypeFindFactory","synthetic":false,"types":[]},{"text":"impl Clone for URIHandler","synthetic":false,"types":[]},{"text":"impl Clone for DateTime","synthetic":false,"types":[]},{"text":"impl Clone for BufferingMode","synthetic":false,"types":[]},{"text":"impl Clone for BusSyncReply","synthetic":false,"types":[]},{"text":"impl Clone for CapsIntersectMode","synthetic":false,"types":[]},{"text":"impl Clone for ClockEntryType","synthetic":false,"types":[]},{"text":"impl Clone for ClockReturn","synthetic":false,"types":[]},{"text":"impl Clone for ClockType","synthetic":false,"types":[]},{"text":"impl Clone for CoreError","synthetic":false,"types":[]},{"text":"impl Clone for DebugLevel","synthetic":false,"types":[]},{"text":"impl Clone for EventType","synthetic":false,"types":[]},{"text":"impl Clone for FlowReturn","synthetic":false,"types":[]},{"text":"impl Clone for Format","synthetic":false,"types":[]},{"text":"impl Clone for LibraryError","synthetic":false,"types":[]},{"text":"impl Clone for PadDirection","synthetic":false,"types":[]},{"text":"impl Clone for PadLinkReturn","synthetic":false,"types":[]},{"text":"impl Clone for PadMode","synthetic":false,"types":[]},{"text":"impl Clone for PadPresence","synthetic":false,"types":[]},{"text":"impl Clone for PadProbeReturn","synthetic":false,"types":[]},{"text":"impl Clone for ParseError","synthetic":false,"types":[]},{"text":"impl Clone for PluginError","synthetic":false,"types":[]},{"text":"impl Clone for ProgressType","synthetic":false,"types":[]},{"text":"impl Clone for QOSType","synthetic":false,"types":[]},{"text":"impl Clone for Rank","synthetic":false,"types":[]},{"text":"impl Clone for ResourceError","synthetic":false,"types":[]},{"text":"impl Clone for SeekType","synthetic":false,"types":[]},{"text":"impl Clone for State","synthetic":false,"types":[]},{"text":"impl Clone for StateChange","synthetic":false,"types":[]},{"text":"impl Clone for StateChangeReturn","synthetic":false,"types":[]},{"text":"impl Clone for StreamError","synthetic":false,"types":[]},{"text":"impl Clone for StreamStatusType","synthetic":false,"types":[]},{"text":"impl Clone for StructureChangeType","synthetic":false,"types":[]},{"text":"impl Clone for TagFlag","synthetic":false,"types":[]},{"text":"impl Clone for TagMergeMode","synthetic":false,"types":[]},{"text":"impl Clone for TagScope","synthetic":false,"types":[]},{"text":"impl Clone for TaskState","synthetic":false,"types":[]},{"text":"impl Clone for TocEntryType","synthetic":false,"types":[]},{"text":"impl Clone for TocLoopType","synthetic":false,"types":[]},{"text":"impl Clone for TocScope","synthetic":false,"types":[]},{"text":"impl Clone for TypeFindProbability","synthetic":false,"types":[]},{"text":"impl Clone for URIError","synthetic":false,"types":[]},{"text":"impl Clone for URIType","synthetic":false,"types":[]},{"text":"impl Clone for BinFlags","synthetic":false,"types":[]},{"text":"impl Clone for BufferCopyFlags","synthetic":false,"types":[]},{"text":"impl Clone for BufferFlags","synthetic":false,"types":[]},{"text":"impl Clone for BufferPoolAcquireFlags","synthetic":false,"types":[]},{"text":"impl Clone for ClockFlags","synthetic":false,"types":[]},{"text":"impl Clone for DebugColorFlags","synthetic":false,"types":[]},{"text":"impl Clone for DebugGraphDetails","synthetic":false,"types":[]},{"text":"impl Clone for ElementFlags","synthetic":false,"types":[]},{"text":"impl Clone for MemoryFlags","synthetic":false,"types":[]},{"text":"impl Clone for ObjectFlags","synthetic":false,"types":[]},{"text":"impl Clone for PadFlags","synthetic":false,"types":[]},{"text":"impl Clone for PadLinkCheck","synthetic":false,"types":[]},{"text":"impl Clone for PadProbeType","synthetic":false,"types":[]},{"text":"impl Clone for ParseFlags","synthetic":false,"types":[]},{"text":"impl Clone for PipelineFlags","synthetic":false,"types":[]},{"text":"impl Clone for PluginDependencyFlags","synthetic":false,"types":[]},{"text":"impl Clone for PluginFlags","synthetic":false,"types":[]},{"text":"impl Clone for SchedulingFlags","synthetic":false,"types":[]},{"text":"impl Clone for SeekFlags","synthetic":false,"types":[]},{"text":"impl Clone for SegmentFlags","synthetic":false,"types":[]},{"text":"impl Clone for StreamFlags","synthetic":false,"types":[]},{"text":"impl Clone for DebugCategory","synthetic":false,"types":[]},{"text":"impl Clone for ErrorMessage","synthetic":false,"types":[]},{"text":"impl Clone for LoggableError","synthetic":false,"types":[]},{"text":"impl Clone for Message","synthetic":false,"types":[]},{"text":"impl Clone for Fraction","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for IntRange&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for FractionRange","synthetic":false,"types":[]},{"text":"impl Clone for Bitmask","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Array&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for List&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'name&gt; Clone for GetError&lt;'name&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Structure","synthetic":false,"types":[]},{"text":"impl Clone for Caps","synthetic":false,"types":[]},{"text":"impl Clone for CapsFeatures","synthetic":false,"types":[]},{"text":"impl Clone for TagList","synthetic":false,"types":[]},{"text":"impl Clone for Buffer","synthetic":false,"types":[]},{"text":"impl Clone for Memory","synthetic":false,"types":[]},{"text":"impl Clone for Sample","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for SampleBuilder&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for BufferList","synthetic":false,"types":[]},{"text":"impl Clone for Query","synthetic":false,"types":[]},{"text":"impl Clone for Seqnum","synthetic":false,"types":[]},{"text":"impl Clone for GroupId","synthetic":false,"types":[]},{"text":"impl Clone for Event","synthetic":false,"types":[]},{"text":"impl Clone for Context","synthetic":false,"types":[]},{"text":"impl Clone for ElementMessageType","synthetic":false,"types":[]},{"text":"impl Clone for AllocationParams","synthetic":false,"types":[]},{"text":"impl Clone for ClockTime","synthetic":false,"types":[]},{"text":"impl Clone for StateChangeSuccess","synthetic":false,"types":[]},{"text":"impl Clone for StateChangeError","synthetic":false,"types":[]},{"text":"impl Clone for FlowSuccess","synthetic":false,"types":[]},{"text":"impl Clone for FlowError","synthetic":false,"types":[]},{"text":"impl Clone for PadLinkSuccess","synthetic":false,"types":[]},{"text":"impl Clone for PadLinkError","synthetic":false,"types":[]},{"text":"impl Clone for ClockSuccess","synthetic":false,"types":[]},{"text":"impl Clone for ClockError","synthetic":false,"types":[]},{"text":"impl Clone for TagError","synthetic":false,"types":[]},{"text":"impl Clone for MessageType","synthetic":false,"types":[]},{"text":"impl Clone for IteratorError","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;StaticType + 'static&gt; Clone for Iterator&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;StaticType + 'static&gt; Clone for StdIterator&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ParseContext","synthetic":false,"types":[]},{"text":"impl Clone for GenericFormattedValue","synthetic":false,"types":[]},{"text":"impl Clone for Undefined","synthetic":false,"types":[]},{"text":"impl Clone for Default","synthetic":false,"types":[]},{"text":"impl Clone for Bytes","synthetic":false,"types":[]},{"text":"impl Clone for Buffers","synthetic":false,"types":[]},{"text":"impl Clone for Percent","synthetic":false,"types":[]},{"text":"impl Clone for TryFromGenericFormattedValueError","synthetic":false,"types":[]},{"text":"impl Clone for TryPercentFromFloatError","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;FormattedValue&gt; Clone for FormattedSegment&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Toc","synthetic":false,"types":[]},{"text":"impl Clone for TocEntry","synthetic":false,"types":[]},{"text":"impl Clone for ClockId","synthetic":false,"types":[]},{"text":"impl Clone for BufferPoolConfig","synthetic":false,"types":[]},{"text":"impl Clone for FlowError","synthetic":false,"types":[]}];
implementors["gstreamer_sys"] = [{"text":"impl Clone for GstControlBinding_ABI","synthetic":false,"types":[]},{"text":"impl Clone for GstPadProbeInfo_ABI","synthetic":false,"types":[]},{"text":"impl Clone for GstPadTemplate_ABI","synthetic":false,"types":[]},{"text":"impl Clone for GstPad_ABI","synthetic":false,"types":[]},{"text":"impl Clone for GstAllocationParams","synthetic":false,"types":[]},{"text":"impl Clone for GstAllocatorClass","synthetic":false,"types":[]},{"text":"impl Clone for GstBinClass","synthetic":false,"types":[]},{"text":"impl Clone for GstBuffer","synthetic":false,"types":[]},{"text":"impl Clone for GstBufferPoolAcquireParams","synthetic":false,"types":[]},{"text":"impl Clone for GstBufferPoolClass","synthetic":false,"types":[]},{"text":"impl Clone for GstBusClass","synthetic":false,"types":[]},{"text":"impl Clone for GstCaps","synthetic":false,"types":[]},{"text":"impl Clone for GstChildProxyInterface","synthetic":false,"types":[]},{"text":"impl Clone for GstClockClass","synthetic":false,"types":[]},{"text":"impl Clone for GstClockEntry","synthetic":false,"types":[]},{"text":"impl Clone for GstControlBindingClass","synthetic":false,"types":[]},{"text":"impl Clone for GstControlBinding_ABI_abi","synthetic":false,"types":[]},{"text":"impl Clone for GstControlSourceClass","synthetic":false,"types":[]},{"text":"impl Clone for GstDebugCategory","synthetic":false,"types":[]},{"text":"impl Clone for GstDeviceClass","synthetic":false,"types":[]},{"text":"impl Clone for GstDeviceMonitorClass","synthetic":false,"types":[]},{"text":"impl Clone for GstDeviceProviderClass","synthetic":false,"types":[]},{"text":"impl Clone for GstElementClass","synthetic":false,"types":[]},{"text":"impl Clone for GstEvent","synthetic":false,"types":[]},{"text":"impl Clone for GstFormatDefinition","synthetic":false,"types":[]},{"text":"impl Clone for GstGhostPadClass","synthetic":false,"types":[]},{"text":"impl Clone for GstIterator","synthetic":false,"types":[]},{"text":"impl Clone for GstMapInfo","synthetic":false,"types":[]},{"text":"impl Clone for GstMemory","synthetic":false,"types":[]},{"text":"impl Clone for GstMessage","synthetic":false,"types":[]},{"text":"impl Clone for GstMeta","synthetic":false,"types":[]},{"text":"impl Clone for GstMetaInfo","synthetic":false,"types":[]},{"text":"impl Clone for GstMetaTransformCopy","synthetic":false,"types":[]},{"text":"impl Clone for GstMiniObject","synthetic":false,"types":[]},{"text":"impl Clone for GstObjectClass","synthetic":false,"types":[]},{"text":"impl Clone for GstPadClass","synthetic":false,"types":[]},{"text":"impl Clone for GstPadProbeInfo","synthetic":false,"types":[]},{"text":"impl Clone for GstPadProbeInfo_ABI_abi","synthetic":false,"types":[]},{"text":"impl Clone for GstPadTemplateClass","synthetic":false,"types":[]},{"text":"impl Clone for GstPadTemplate_ABI_abi","synthetic":false,"types":[]},{"text":"impl Clone for GstPad_ABI_abi","synthetic":false,"types":[]},{"text":"impl Clone for GstParamSpecArray","synthetic":false,"types":[]},{"text":"impl Clone for GstParamSpecFraction","synthetic":false,"types":[]},{"text":"impl Clone for GstParentBufferMeta","synthetic":false,"types":[]},{"text":"impl Clone for GstPipelineClass","synthetic":false,"types":[]},{"text":"impl Clone for GstPluginDesc","synthetic":false,"types":[]},{"text":"impl Clone for GstPollFD","synthetic":false,"types":[]},{"text":"impl Clone for GstPresetInterface","synthetic":false,"types":[]},{"text":"impl Clone for GstPromise","synthetic":false,"types":[]},{"text":"impl Clone for GstProtectionMeta","synthetic":false,"types":[]},{"text":"impl Clone for GstProxyPadClass","synthetic":false,"types":[]},{"text":"impl Clone for GstQuery","synthetic":false,"types":[]},{"text":"impl Clone for GstReferenceTimestampMeta","synthetic":false,"types":[]},{"text":"impl Clone for GstRegistryClass","synthetic":false,"types":[]},{"text":"impl Clone for GstSegment","synthetic":false,"types":[]},{"text":"impl Clone for GstStaticCaps","synthetic":false,"types":[]},{"text":"impl Clone for GstStaticPadTemplate","synthetic":false,"types":[]},{"text":"impl Clone for GstStreamClass","synthetic":false,"types":[]},{"text":"impl Clone for GstStreamCollectionClass","synthetic":false,"types":[]},{"text":"impl Clone for GstStructure","synthetic":false,"types":[]},{"text":"impl Clone for GstSystemClockClass","synthetic":false,"types":[]},{"text":"impl Clone for GstTagList","synthetic":false,"types":[]},{"text":"impl Clone for GstTagSetterInterface","synthetic":false,"types":[]},{"text":"impl Clone for GstTaskClass","synthetic":false,"types":[]},{"text":"impl Clone for GstTaskPoolClass","synthetic":false,"types":[]},{"text":"impl Clone for GstTimedValue","synthetic":false,"types":[]},{"text":"impl Clone for GstTocSetterInterface","synthetic":false,"types":[]},{"text":"impl Clone for GstTracerClass","synthetic":false,"types":[]},{"text":"impl Clone for GstTypeFind","synthetic":false,"types":[]},{"text":"impl Clone for GstURIHandlerInterface","synthetic":false,"types":[]},{"text":"impl Clone for GstValueTable","synthetic":false,"types":[]},{"text":"impl Clone for GstAllocator","synthetic":false,"types":[]},{"text":"impl Clone for GstBin","synthetic":false,"types":[]},{"text":"impl Clone for GstBufferPool","synthetic":false,"types":[]},{"text":"impl Clone for GstBus","synthetic":false,"types":[]},{"text":"impl Clone for GstClock","synthetic":false,"types":[]},{"text":"impl Clone for GstControlBinding","synthetic":false,"types":[]},{"text":"impl Clone for GstControlSource","synthetic":false,"types":[]},{"text":"impl Clone for GstDevice","synthetic":false,"types":[]},{"text":"impl Clone for GstDeviceMonitor","synthetic":false,"types":[]},{"text":"impl Clone for GstDeviceProvider","synthetic":false,"types":[]},{"text":"impl Clone for GstElement","synthetic":false,"types":[]},{"text":"impl Clone for GstGhostPad","synthetic":false,"types":[]},{"text":"impl Clone for GstObject","synthetic":false,"types":[]},{"text":"impl Clone for GstPad","synthetic":false,"types":[]},{"text":"impl Clone for GstPadTemplate","synthetic":false,"types":[]},{"text":"impl Clone for GstPipeline","synthetic":false,"types":[]},{"text":"impl Clone for GstProxyPad","synthetic":false,"types":[]},{"text":"impl Clone for GstRegistry","synthetic":false,"types":[]},{"text":"impl Clone for GstStream","synthetic":false,"types":[]},{"text":"impl Clone for GstStreamCollection","synthetic":false,"types":[]},{"text":"impl Clone for GstSystemClock","synthetic":false,"types":[]},{"text":"impl Clone for GstTask","synthetic":false,"types":[]},{"text":"impl Clone for GstTaskPool","synthetic":false,"types":[]},{"text":"impl Clone for GstTracer","synthetic":false,"types":[]}];
implementors["itertools"] = [{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for MultiProduct&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, J:&nbsp;Clone&gt; Clone for Interleave&lt;I, J&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, J:&nbsp;Clone&gt; Clone for InterleaveShortest&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Iterator&lt;Item = I::Item&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for PutBack&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, J:&nbsp;Clone&gt; Clone for Product&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for Batching&lt;I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Step&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I, J, F&gt; Clone for MergeBy&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Iterator&lt;Item = I::Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Peekable&lt;I&gt;: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;Peekable&lt;J&gt;: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for Coalesce&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, Pred:&nbsp;Clone&gt; Clone for DedupBy&lt;I, Pred&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for WhileSome&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, T:&nbsp;Clone&gt; Clone for TupleCombinations&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: HasCombination&lt;I&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Combination: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, R:&nbsp;Clone&gt; Clone for MapInto&lt;I, R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for MapResults&lt;I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for Positions&lt;I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for Update&lt;I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone, B:&nbsp;Clone&gt; Clone for EitherOrBoth&lt;A, B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I, J&gt; Clone for ConsTuples&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Clone + Iterator&lt;Item = J&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; Clone for Combinations&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Clone + Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for CombinationsWithReplacement&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for ExactlyOneError&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, I:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for FormatWith&lt;'a, I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, I:&nbsp;Clone&gt; Clone for Format&lt;'a, I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for Intersperse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I, F&gt; Clone for KMergeBy&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I, J, F&gt; Clone for MergeJoinBy&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;PutBack&lt;Fuse&lt;I&gt;&gt;: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;PutBack&lt;Fuse&lt;J&gt;&gt;: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for MinMaxResult&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone&gt; Clone for MultiPeek&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for PadUsing&lt;I, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; Clone for Permutations&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Clone + Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + Iterator&gt; Clone for PutBackN&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; Clone for RcIter&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for RepeatN&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Clone&gt; Clone for RepeatCall&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for Unfold&lt;St, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for Iterate&lt;St, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for TupleBuffer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: HomogeneousTuple,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Buffer: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, T:&nbsp;Clone&gt; Clone for Tuples&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator&lt;Item = T::Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: HomogeneousTuple,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Buffer: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, T:&nbsp;Clone&gt; Clone for TupleWindows&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator&lt;Item = T::Item&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: HomogeneousTuple,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + Iterator, V:&nbsp;Clone, F:&nbsp;Clone&gt; Clone for UniqueBy&lt;I, V, F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone + Iterator&gt; Clone for Unique&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; Clone for WithPosition&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Clone + Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Position&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, J:&nbsp;Clone&gt; Clone for ZipEq&lt;I, J&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, U:&nbsp;Clone&gt; Clone for ZipLongest&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Zip&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for FoldWhile&lt;T&gt;","synthetic":false,"types":[]}];
implementors["libc"] = [{"text":"impl Clone for DIR","synthetic":false,"types":[]},{"text":"impl Clone for group","synthetic":false,"types":[]},{"text":"impl Clone for utimbuf","synthetic":false,"types":[]},{"text":"impl Clone for timeval","synthetic":false,"types":[]},{"text":"impl Clone for timespec","synthetic":false,"types":[]},{"text":"impl Clone for rlimit","synthetic":false,"types":[]},{"text":"impl Clone for rusage","synthetic":false,"types":[]},{"text":"impl Clone for ipv6_mreq","synthetic":false,"types":[]},{"text":"impl Clone for hostent","synthetic":false,"types":[]},{"text":"impl Clone for iovec","synthetic":false,"types":[]},{"text":"impl Clone for pollfd","synthetic":false,"types":[]},{"text":"impl Clone for winsize","synthetic":false,"types":[]},{"text":"impl Clone for linger","synthetic":false,"types":[]},{"text":"impl Clone for sigval","synthetic":false,"types":[]},{"text":"impl Clone for itimerval","synthetic":false,"types":[]},{"text":"impl Clone for tms","synthetic":false,"types":[]},{"text":"impl Clone for servent","synthetic":false,"types":[]},{"text":"impl Clone for protoent","synthetic":false,"types":[]},{"text":"impl Clone for FILE","synthetic":false,"types":[]},{"text":"impl Clone for fpos_t","synthetic":false,"types":[]},{"text":"impl Clone for timezone","synthetic":false,"types":[]},{"text":"impl Clone for in_addr","synthetic":false,"types":[]},{"text":"impl Clone for ip_mreq","synthetic":false,"types":[]},{"text":"impl Clone for ip_mreq_source","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_in","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_in6","synthetic":false,"types":[]},{"text":"impl Clone for addrinfo","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_ll","synthetic":false,"types":[]},{"text":"impl Clone for fd_set","synthetic":false,"types":[]},{"text":"impl Clone for tm","synthetic":false,"types":[]},{"text":"impl Clone for sched_param","synthetic":false,"types":[]},{"text":"impl Clone for Dl_info","synthetic":false,"types":[]},{"text":"impl Clone for lconv","synthetic":false,"types":[]},{"text":"impl Clone for in_pktinfo","synthetic":false,"types":[]},{"text":"impl Clone for ifaddrs","synthetic":false,"types":[]},{"text":"impl Clone for in6_rtmsg","synthetic":false,"types":[]},{"text":"impl Clone for arpreq","synthetic":false,"types":[]},{"text":"impl Clone for arpreq_old","synthetic":false,"types":[]},{"text":"impl Clone for arphdr","synthetic":false,"types":[]},{"text":"impl Clone for mmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for epoll_event","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_un","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_storage","synthetic":false,"types":[]},{"text":"impl Clone for utsname","synthetic":false,"types":[]},{"text":"impl Clone for sigevent","synthetic":false,"types":[]},{"text":"impl Clone for fpos64_t","synthetic":false,"types":[]},{"text":"impl Clone for rlimit64","synthetic":false,"types":[]},{"text":"impl Clone for glob_t","synthetic":false,"types":[]},{"text":"impl Clone for passwd","synthetic":false,"types":[]},{"text":"impl Clone for spwd","synthetic":false,"types":[]},{"text":"impl Clone for dqblk","synthetic":false,"types":[]},{"text":"impl Clone for signalfd_siginfo","synthetic":false,"types":[]},{"text":"impl Clone for itimerspec","synthetic":false,"types":[]},{"text":"impl Clone for fsid_t","synthetic":false,"types":[]},{"text":"impl Clone for packet_mreq","synthetic":false,"types":[]},{"text":"impl Clone for cpu_set_t","synthetic":false,"types":[]},{"text":"impl Clone for if_nameindex","synthetic":false,"types":[]},{"text":"impl Clone for msginfo","synthetic":false,"types":[]},{"text":"impl Clone for sembuf","synthetic":false,"types":[]},{"text":"impl Clone for input_event","synthetic":false,"types":[]},{"text":"impl Clone for input_id","synthetic":false,"types":[]},{"text":"impl Clone for input_absinfo","synthetic":false,"types":[]},{"text":"impl Clone for input_keymap_entry","synthetic":false,"types":[]},{"text":"impl Clone for input_mask","synthetic":false,"types":[]},{"text":"impl Clone for ff_replay","synthetic":false,"types":[]},{"text":"impl Clone for ff_trigger","synthetic":false,"types":[]},{"text":"impl Clone for ff_envelope","synthetic":false,"types":[]},{"text":"impl Clone for ff_constant_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_ramp_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_condition_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_periodic_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_rumble_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_effect","synthetic":false,"types":[]},{"text":"impl Clone for dl_phdr_info","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Ehdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Ehdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Sym","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Sym","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Phdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Phdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Shdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Shdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Chdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Chdr","synthetic":false,"types":[]},{"text":"impl Clone for ucred","synthetic":false,"types":[]},{"text":"impl Clone for mntent","synthetic":false,"types":[]},{"text":"impl Clone for posix_spawn_file_actions_t","synthetic":false,"types":[]},{"text":"impl Clone for posix_spawnattr_t","synthetic":false,"types":[]},{"text":"impl Clone for genlmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for in6_pktinfo","synthetic":false,"types":[]},{"text":"impl Clone for arpd_request","synthetic":false,"types":[]},{"text":"impl Clone for inotify_event","synthetic":false,"types":[]},{"text":"impl Clone for fanotify_response","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_vm","synthetic":false,"types":[]},{"text":"impl Clone for regmatch_t","synthetic":false,"types":[]},{"text":"impl Clone for sock_extended_err","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_nl","synthetic":false,"types":[]},{"text":"impl Clone for dirent","synthetic":false,"types":[]},{"text":"impl Clone for dirent64","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_alg","synthetic":false,"types":[]},{"text":"impl Clone for af_alg_iv","synthetic":false,"types":[]},{"text":"impl Clone for mq_attr","synthetic":false,"types":[]},{"text":"impl Clone for statx","synthetic":false,"types":[]},{"text":"impl Clone for statx_timestamp","synthetic":false,"types":[]},{"text":"impl Clone for aiocb","synthetic":false,"types":[]},{"text":"impl Clone for __exit_status","synthetic":false,"types":[]},{"text":"impl Clone for __timeval","synthetic":false,"types":[]},{"text":"impl Clone for glob64_t","synthetic":false,"types":[]},{"text":"impl Clone for msghdr","synthetic":false,"types":[]},{"text":"impl Clone for cmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for termios","synthetic":false,"types":[]},{"text":"impl Clone for mallinfo","synthetic":false,"types":[]},{"text":"impl Clone for nlmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for nlmsgerr","synthetic":false,"types":[]},{"text":"impl Clone for nl_pktinfo","synthetic":false,"types":[]},{"text":"impl Clone for nl_mmap_req","synthetic":false,"types":[]},{"text":"impl Clone for nl_mmap_hdr","synthetic":false,"types":[]},{"text":"impl Clone for nlattr","synthetic":false,"types":[]},{"text":"impl Clone for rtentry","synthetic":false,"types":[]},{"text":"impl Clone for timex","synthetic":false,"types":[]},{"text":"impl Clone for ntptimeval","synthetic":false,"types":[]},{"text":"impl Clone for regex_t","synthetic":false,"types":[]},{"text":"impl Clone for utmpx","synthetic":false,"types":[]},{"text":"impl Clone for sigset_t","synthetic":false,"types":[]},{"text":"impl Clone for sysinfo","synthetic":false,"types":[]},{"text":"impl Clone for msqid_ds","synthetic":false,"types":[]},{"text":"impl Clone for sigaction","synthetic":false,"types":[]},{"text":"impl Clone for statfs","synthetic":false,"types":[]},{"text":"impl Clone for flock","synthetic":false,"types":[]},{"text":"impl Clone for flock64","synthetic":false,"types":[]},{"text":"impl Clone for siginfo_t","synthetic":false,"types":[]},{"text":"impl Clone for stack_t","synthetic":false,"types":[]},{"text":"impl Clone for stat","synthetic":false,"types":[]},{"text":"impl Clone for stat64","synthetic":false,"types":[]},{"text":"impl Clone for statfs64","synthetic":false,"types":[]},{"text":"impl Clone for statvfs64","synthetic":false,"types":[]},{"text":"impl Clone for pthread_attr_t","synthetic":false,"types":[]},{"text":"impl Clone for _libc_fpxreg","synthetic":false,"types":[]},{"text":"impl Clone for _libc_xmmreg","synthetic":false,"types":[]},{"text":"impl Clone for _libc_fpstate","synthetic":false,"types":[]},{"text":"impl Clone for user_regs_struct","synthetic":false,"types":[]},{"text":"impl Clone for user","synthetic":false,"types":[]},{"text":"impl Clone for mcontext_t","synthetic":false,"types":[]},{"text":"impl Clone for ipc_perm","synthetic":false,"types":[]},{"text":"impl Clone for shmid_ds","synthetic":false,"types":[]},{"text":"impl Clone for termios2","synthetic":false,"types":[]},{"text":"impl Clone for ip_mreqn","synthetic":false,"types":[]},{"text":"impl Clone for user_fpregs_struct","synthetic":false,"types":[]},{"text":"impl Clone for ucontext_t","synthetic":false,"types":[]},{"text":"impl Clone for statvfs","synthetic":false,"types":[]},{"text":"impl Clone for max_align_t","synthetic":false,"types":[]},{"text":"impl Clone for sem_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_mutexattr_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_rwlockattr_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_condattr_t","synthetic":false,"types":[]},{"text":"impl Clone for fanotify_event_metadata","synthetic":false,"types":[]},{"text":"impl Clone for pthread_cond_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_mutex_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_rwlock_t","synthetic":false,"types":[]},{"text":"impl Clone for in6_addr","synthetic":false,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for ExtendedGcd&lt;A&gt;","synthetic":false,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Ratio&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ParseRatioError","synthetic":false,"types":[]}];
implementors["once_cell"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for OnceCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for OnceCell&lt;T&gt;","synthetic":false,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Clone for WaitTimeoutResult","synthetic":false,"types":[]},{"text":"impl Clone for OnceState","synthetic":false,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Clone for ParkResult","synthetic":false,"types":[]},{"text":"impl Clone for UnparkResult","synthetic":false,"types":[]},{"text":"impl Clone for RequeueOp","synthetic":false,"types":[]},{"text":"impl Clone for FilterOp","synthetic":false,"types":[]},{"text":"impl Clone for UnparkToken","synthetic":false,"types":[]},{"text":"impl Clone for ParkToken","synthetic":false,"types":[]}];
implementors["pretty_hex"] = [{"text":"impl Clone for HexConfig","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Clone for TokenStream","synthetic":false,"types":[]},{"text":"impl Clone for Span","synthetic":false,"types":[]},{"text":"impl Clone for TokenTree","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl Clone for Delimiter","synthetic":false,"types":[]},{"text":"impl Clone for Punct","synthetic":false,"types":[]},{"text":"impl Clone for Spacing","synthetic":false,"types":[]},{"text":"impl Clone for Ident","synthetic":false,"types":[]},{"text":"impl Clone for Literal","synthetic":false,"types":[]},{"text":"impl Clone for IntoIter","synthetic":false,"types":[]}];
implementors["proc_macro_error"] = [{"text":"impl Clone for SpanRange","synthetic":false,"types":[]}];
implementors["pyo3"] = [{"text":"impl Clone for ElementType","synthetic":false,"types":[]},{"text":"impl&lt;'p&gt; Clone for PyVisit&lt;'p&gt;","synthetic":false,"types":[]},{"text":"impl Clone for PyMemAllocatorDomain","synthetic":false,"types":[]},{"text":"impl Clone for PyMemAllocatorEx","synthetic":false,"types":[]},{"text":"impl Clone for PyObject","synthetic":false,"types":[]},{"text":"impl Clone for PyVarObject","synthetic":false,"types":[]},{"text":"impl Clone for Py_buffer","synthetic":false,"types":[]},{"text":"impl Clone for PyNumberMethods","synthetic":false,"types":[]},{"text":"impl Clone for PySequenceMethods","synthetic":false,"types":[]},{"text":"impl Clone for PyMappingMethods","synthetic":false,"types":[]},{"text":"impl Clone for PyAsyncMethods","synthetic":false,"types":[]},{"text":"impl Clone for PyBufferProcs","synthetic":false,"types":[]},{"text":"impl Clone for PyTypeObject","synthetic":false,"types":[]},{"text":"impl Clone for PyHeapTypeObject","synthetic":false,"types":[]},{"text":"impl Clone for PyType_Slot","synthetic":false,"types":[]},{"text":"impl Clone for PyType_Spec","synthetic":false,"types":[]},{"text":"impl Clone for PyObjectArenaAllocator","synthetic":false,"types":[]},{"text":"impl Clone for PyHash_FuncDef","synthetic":false,"types":[]},{"text":"impl Clone for Py_complex","synthetic":false,"types":[]},{"text":"impl Clone for PyComplexObject","synthetic":false,"types":[]},{"text":"impl Clone for PyListObject","synthetic":false,"types":[]},{"text":"impl Clone for PyMethodDef","synthetic":false,"types":[]},{"text":"impl Clone for PyModuleDef_Base","synthetic":false,"types":[]},{"text":"impl Clone for PyModuleDef_Slot","synthetic":false,"types":[]},{"text":"impl Clone for PyModuleDef","synthetic":false,"types":[]},{"text":"impl Clone for PyGetSetDef","synthetic":false,"types":[]},{"text":"impl Clone for PyGenObject","synthetic":false,"types":[]},{"text":"impl Clone for PyStructSequence_Field","synthetic":false,"types":[]},{"text":"impl Clone for PyStructSequence_Desc","synthetic":false,"types":[]},{"text":"impl Clone for PyInterpreterState","synthetic":false,"types":[]},{"text":"impl Clone for PyThreadState","synthetic":false,"types":[]},{"text":"impl Clone for PyGILState_STATE","synthetic":false,"types":[]},{"text":"impl Clone for PyCompilerFlags","synthetic":false,"types":[]},{"text":"impl Clone for PyCodeObject","synthetic":false,"types":[]},{"text":"impl Clone for PyFutureFeatures","synthetic":false,"types":[]},{"text":"impl Clone for PyMemberDef","synthetic":false,"types":[]},{"text":"impl Clone for PyTryBlock","synthetic":false,"types":[]},{"text":"impl Clone for PyFrameObject","synthetic":false,"types":[]},{"text":"impl Clone for PyDateTime_CAPI","synthetic":false,"types":[]},{"text":"impl Clone for PyDateTime_Date","synthetic":false,"types":[]},{"text":"impl Clone for PyDateTime_Time","synthetic":false,"types":[]},{"text":"impl Clone for PyDateTime_DateTime","synthetic":false,"types":[]},{"text":"impl Clone for PyDateTime_Delta","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for Py&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'p&gt; Clone for Python&lt;'p&gt;","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for UnitDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for BoolDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I8Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I16Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for IsizeDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U8Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U16Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for UsizeDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for F32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for F64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for CharDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I128Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U128Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Clone for StrDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Clone for BorrowedStrDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for StringDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, E&gt; Clone for CowStrDeserializer&lt;'a, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Clone for BorrowedBytesDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, E:&nbsp;Clone&gt; Clone for SeqDeserializer&lt;I, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for SeqAccessDeserializer&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, I, E&gt; Clone for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Pair,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I::Item as Pair&gt;::Second: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for MapAccessDeserializer&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl Clone for IgnoredAny","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Unexpected&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Slab&lt;T&gt;","synthetic":false,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; Clone for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array + Clone&gt; Clone for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Clone for Underscore","synthetic":false,"types":[]},{"text":"impl Clone for Abstract","synthetic":false,"types":[]},{"text":"impl Clone for As","synthetic":false,"types":[]},{"text":"impl Clone for Async","synthetic":false,"types":[]},{"text":"impl Clone for Auto","synthetic":false,"types":[]},{"text":"impl Clone for Await","synthetic":false,"types":[]},{"text":"impl Clone for Become","synthetic":false,"types":[]},{"text":"impl Clone for Box","synthetic":false,"types":[]},{"text":"impl Clone for Break","synthetic":false,"types":[]},{"text":"impl Clone for Const","synthetic":false,"types":[]},{"text":"impl Clone for Continue","synthetic":false,"types":[]},{"text":"impl Clone for Crate","synthetic":false,"types":[]},{"text":"impl Clone for Default","synthetic":false,"types":[]},{"text":"impl Clone for Do","synthetic":false,"types":[]},{"text":"impl Clone for Dyn","synthetic":false,"types":[]},{"text":"impl Clone for Else","synthetic":false,"types":[]},{"text":"impl Clone for Enum","synthetic":false,"types":[]},{"text":"impl Clone for Extern","synthetic":false,"types":[]},{"text":"impl Clone for Final","synthetic":false,"types":[]},{"text":"impl Clone for Fn","synthetic":false,"types":[]},{"text":"impl Clone for For","synthetic":false,"types":[]},{"text":"impl Clone for If","synthetic":false,"types":[]},{"text":"impl Clone for Impl","synthetic":false,"types":[]},{"text":"impl Clone for In","synthetic":false,"types":[]},{"text":"impl Clone for Let","synthetic":false,"types":[]},{"text":"impl Clone for Loop","synthetic":false,"types":[]},{"text":"impl Clone for Macro","synthetic":false,"types":[]},{"text":"impl Clone for Match","synthetic":false,"types":[]},{"text":"impl Clone for Mod","synthetic":false,"types":[]},{"text":"impl Clone for Move","synthetic":false,"types":[]},{"text":"impl Clone for Mut","synthetic":false,"types":[]},{"text":"impl Clone for Override","synthetic":false,"types":[]},{"text":"impl Clone for Priv","synthetic":false,"types":[]},{"text":"impl Clone for Pub","synthetic":false,"types":[]},{"text":"impl Clone for Ref","synthetic":false,"types":[]},{"text":"impl Clone for Return","synthetic":false,"types":[]},{"text":"impl Clone for SelfType","synthetic":false,"types":[]},{"text":"impl Clone for SelfValue","synthetic":false,"types":[]},{"text":"impl Clone for Static","synthetic":false,"types":[]},{"text":"impl Clone for Struct","synthetic":false,"types":[]},{"text":"impl Clone for Super","synthetic":false,"types":[]},{"text":"impl Clone for Trait","synthetic":false,"types":[]},{"text":"impl Clone for Try","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for Typeof","synthetic":false,"types":[]},{"text":"impl Clone for Union","synthetic":false,"types":[]},{"text":"impl Clone for Unsafe","synthetic":false,"types":[]},{"text":"impl Clone for Unsized","synthetic":false,"types":[]},{"text":"impl Clone for Use","synthetic":false,"types":[]},{"text":"impl Clone for Virtual","synthetic":false,"types":[]},{"text":"impl Clone for Where","synthetic":false,"types":[]},{"text":"impl Clone for While","synthetic":false,"types":[]},{"text":"impl Clone for Yield","synthetic":false,"types":[]},{"text":"impl Clone for Add","synthetic":false,"types":[]},{"text":"impl Clone for AddEq","synthetic":false,"types":[]},{"text":"impl Clone for And","synthetic":false,"types":[]},{"text":"impl Clone for AndAnd","synthetic":false,"types":[]},{"text":"impl Clone for AndEq","synthetic":false,"types":[]},{"text":"impl Clone for At","synthetic":false,"types":[]},{"text":"impl Clone for Bang","synthetic":false,"types":[]},{"text":"impl Clone for Caret","synthetic":false,"types":[]},{"text":"impl Clone for CaretEq","synthetic":false,"types":[]},{"text":"impl Clone for Colon","synthetic":false,"types":[]},{"text":"impl Clone for Colon2","synthetic":false,"types":[]},{"text":"impl Clone for Comma","synthetic":false,"types":[]},{"text":"impl Clone for Div","synthetic":false,"types":[]},{"text":"impl Clone for DivEq","synthetic":false,"types":[]},{"text":"impl Clone for Dollar","synthetic":false,"types":[]},{"text":"impl Clone for Dot","synthetic":false,"types":[]},{"text":"impl Clone for Dot2","synthetic":false,"types":[]},{"text":"impl Clone for Dot3","synthetic":false,"types":[]},{"text":"impl Clone for DotDotEq","synthetic":false,"types":[]},{"text":"impl Clone for Eq","synthetic":false,"types":[]},{"text":"impl Clone for EqEq","synthetic":false,"types":[]},{"text":"impl Clone for Ge","synthetic":false,"types":[]},{"text":"impl Clone for Gt","synthetic":false,"types":[]},{"text":"impl Clone for Le","synthetic":false,"types":[]},{"text":"impl Clone for Lt","synthetic":false,"types":[]},{"text":"impl Clone for MulEq","synthetic":false,"types":[]},{"text":"impl Clone for Ne","synthetic":false,"types":[]},{"text":"impl Clone for Or","synthetic":false,"types":[]},{"text":"impl Clone for OrEq","synthetic":false,"types":[]},{"text":"impl Clone for OrOr","synthetic":false,"types":[]},{"text":"impl Clone for Pound","synthetic":false,"types":[]},{"text":"impl Clone for Question","synthetic":false,"types":[]},{"text":"impl Clone for RArrow","synthetic":false,"types":[]},{"text":"impl Clone for LArrow","synthetic":false,"types":[]},{"text":"impl Clone for Rem","synthetic":false,"types":[]},{"text":"impl Clone for RemEq","synthetic":false,"types":[]},{"text":"impl Clone for FatArrow","synthetic":false,"types":[]},{"text":"impl Clone for Semi","synthetic":false,"types":[]},{"text":"impl Clone for Shl","synthetic":false,"types":[]},{"text":"impl Clone for ShlEq","synthetic":false,"types":[]},{"text":"impl Clone for Shr","synthetic":false,"types":[]},{"text":"impl Clone for ShrEq","synthetic":false,"types":[]},{"text":"impl Clone for Star","synthetic":false,"types":[]},{"text":"impl Clone for Sub","synthetic":false,"types":[]},{"text":"impl Clone for SubEq","synthetic":false,"types":[]},{"text":"impl Clone for Tilde","synthetic":false,"types":[]},{"text":"impl Clone for Brace","synthetic":false,"types":[]},{"text":"impl Clone for Bracket","synthetic":false,"types":[]},{"text":"impl Clone for Paren","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ImplGenerics&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for TypeGenerics&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Turbofish&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Lifetime","synthetic":false,"types":[]},{"text":"impl Clone for LitStr","synthetic":false,"types":[]},{"text":"impl Clone for LitByteStr","synthetic":false,"types":[]},{"text":"impl Clone for LitByte","synthetic":false,"types":[]},{"text":"impl Clone for LitChar","synthetic":false,"types":[]},{"text":"impl Clone for LitInt","synthetic":false,"types":[]},{"text":"impl Clone for LitFloat","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Cursor&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Clone for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T, P&gt; Clone for Pairs&lt;'a, T, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Clone for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; Clone for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Clone for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Abi","synthetic":false,"types":[]},{"text":"impl Clone for AngleBracketedGenericArguments","synthetic":false,"types":[]},{"text":"impl Clone for Arm","synthetic":false,"types":[]},{"text":"impl Clone for AttrStyle","synthetic":false,"types":[]},{"text":"impl Clone for Attribute","synthetic":false,"types":[]},{"text":"impl Clone for BareFnArg","synthetic":false,"types":[]},{"text":"impl Clone for BinOp","synthetic":false,"types":[]},{"text":"impl Clone for Binding","synthetic":false,"types":[]},{"text":"impl Clone for Block","synthetic":false,"types":[]},{"text":"impl Clone for BoundLifetimes","synthetic":false,"types":[]},{"text":"impl Clone for ConstParam","synthetic":false,"types":[]},{"text":"impl Clone for Constraint","synthetic":false,"types":[]},{"text":"impl Clone for Data","synthetic":false,"types":[]},{"text":"impl Clone for DataEnum","synthetic":false,"types":[]},{"text":"impl Clone for DataStruct","synthetic":false,"types":[]},{"text":"impl Clone for DataUnion","synthetic":false,"types":[]},{"text":"impl Clone for DeriveInput","synthetic":false,"types":[]},{"text":"impl Clone for Expr","synthetic":false,"types":[]},{"text":"impl Clone for ExprArray","synthetic":false,"types":[]},{"text":"impl Clone for ExprAssign","synthetic":false,"types":[]},{"text":"impl Clone for ExprAssignOp","synthetic":false,"types":[]},{"text":"impl Clone for ExprAsync","synthetic":false,"types":[]},{"text":"impl Clone for ExprAwait","synthetic":false,"types":[]},{"text":"impl Clone for ExprBinary","synthetic":false,"types":[]},{"text":"impl Clone for ExprBlock","synthetic":false,"types":[]},{"text":"impl Clone for ExprBox","synthetic":false,"types":[]},{"text":"impl Clone for ExprBreak","synthetic":false,"types":[]},{"text":"impl Clone for ExprCall","synthetic":false,"types":[]},{"text":"impl Clone for ExprCast","synthetic":false,"types":[]},{"text":"impl Clone for ExprClosure","synthetic":false,"types":[]},{"text":"impl Clone for ExprContinue","synthetic":false,"types":[]},{"text":"impl Clone for ExprField","synthetic":false,"types":[]},{"text":"impl Clone for ExprForLoop","synthetic":false,"types":[]},{"text":"impl Clone for ExprGroup","synthetic":false,"types":[]},{"text":"impl Clone for ExprIf","synthetic":false,"types":[]},{"text":"impl Clone for ExprIndex","synthetic":false,"types":[]},{"text":"impl Clone for ExprLet","synthetic":false,"types":[]},{"text":"impl Clone for ExprLit","synthetic":false,"types":[]},{"text":"impl Clone for ExprLoop","synthetic":false,"types":[]},{"text":"impl Clone for ExprMacro","synthetic":false,"types":[]},{"text":"impl Clone for ExprMatch","synthetic":false,"types":[]},{"text":"impl Clone for ExprMethodCall","synthetic":false,"types":[]},{"text":"impl Clone for ExprParen","synthetic":false,"types":[]},{"text":"impl Clone for ExprPath","synthetic":false,"types":[]},{"text":"impl Clone for ExprRange","synthetic":false,"types":[]},{"text":"impl Clone for ExprReference","synthetic":false,"types":[]},{"text":"impl Clone for ExprRepeat","synthetic":false,"types":[]},{"text":"impl Clone for ExprReturn","synthetic":false,"types":[]},{"text":"impl Clone for ExprStruct","synthetic":false,"types":[]},{"text":"impl Clone for ExprTry","synthetic":false,"types":[]},{"text":"impl Clone for ExprTryBlock","synthetic":false,"types":[]},{"text":"impl Clone for ExprTuple","synthetic":false,"types":[]},{"text":"impl Clone for ExprType","synthetic":false,"types":[]},{"text":"impl Clone for ExprUnary","synthetic":false,"types":[]},{"text":"impl Clone for ExprUnsafe","synthetic":false,"types":[]},{"text":"impl Clone for ExprWhile","synthetic":false,"types":[]},{"text":"impl Clone for ExprYield","synthetic":false,"types":[]},{"text":"impl Clone for Field","synthetic":false,"types":[]},{"text":"impl Clone for FieldPat","synthetic":false,"types":[]},{"text":"impl Clone for FieldValue","synthetic":false,"types":[]},{"text":"impl Clone for Fields","synthetic":false,"types":[]},{"text":"impl Clone for FieldsNamed","synthetic":false,"types":[]},{"text":"impl Clone for FieldsUnnamed","synthetic":false,"types":[]},{"text":"impl Clone for File","synthetic":false,"types":[]},{"text":"impl Clone for FnArg","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItem","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItemFn","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItemMacro","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItemStatic","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItemType","synthetic":false,"types":[]},{"text":"impl Clone for GenericArgument","synthetic":false,"types":[]},{"text":"impl Clone for GenericMethodArgument","synthetic":false,"types":[]},{"text":"impl Clone for GenericParam","synthetic":false,"types":[]},{"text":"impl Clone for Generics","synthetic":false,"types":[]},{"text":"impl Clone for ImplItem","synthetic":false,"types":[]},{"text":"impl Clone for ImplItemConst","synthetic":false,"types":[]},{"text":"impl Clone for ImplItemMacro","synthetic":false,"types":[]},{"text":"impl Clone for ImplItemMethod","synthetic":false,"types":[]},{"text":"impl Clone for ImplItemType","synthetic":false,"types":[]},{"text":"impl Clone for Index","synthetic":false,"types":[]},{"text":"impl Clone for Item","synthetic":false,"types":[]},{"text":"impl Clone for ItemConst","synthetic":false,"types":[]},{"text":"impl Clone for ItemEnum","synthetic":false,"types":[]},{"text":"impl Clone for ItemExternCrate","synthetic":false,"types":[]},{"text":"impl Clone for ItemFn","synthetic":false,"types":[]},{"text":"impl Clone for ItemForeignMod","synthetic":false,"types":[]},{"text":"impl Clone for ItemImpl","synthetic":false,"types":[]},{"text":"impl Clone for ItemMacro","synthetic":false,"types":[]},{"text":"impl Clone for ItemMacro2","synthetic":false,"types":[]},{"text":"impl Clone for ItemMod","synthetic":false,"types":[]},{"text":"impl Clone for ItemStatic","synthetic":false,"types":[]},{"text":"impl Clone for ItemStruct","synthetic":false,"types":[]},{"text":"impl Clone for ItemTrait","synthetic":false,"types":[]},{"text":"impl Clone for ItemTraitAlias","synthetic":false,"types":[]},{"text":"impl Clone for ItemType","synthetic":false,"types":[]},{"text":"impl Clone for ItemUnion","synthetic":false,"types":[]},{"text":"impl Clone for ItemUse","synthetic":false,"types":[]},{"text":"impl Clone for Label","synthetic":false,"types":[]},{"text":"impl Clone for LifetimeDef","synthetic":false,"types":[]},{"text":"impl Clone for Lit","synthetic":false,"types":[]},{"text":"impl Clone for LitBool","synthetic":false,"types":[]},{"text":"impl Clone for Local","synthetic":false,"types":[]},{"text":"impl Clone for Macro","synthetic":false,"types":[]},{"text":"impl Clone for MacroDelimiter","synthetic":false,"types":[]},{"text":"impl Clone for Member","synthetic":false,"types":[]},{"text":"impl Clone for Meta","synthetic":false,"types":[]},{"text":"impl Clone for MetaList","synthetic":false,"types":[]},{"text":"impl Clone for MetaNameValue","synthetic":false,"types":[]},{"text":"impl Clone for MethodTurbofish","synthetic":false,"types":[]},{"text":"impl Clone for NestedMeta","synthetic":false,"types":[]},{"text":"impl Clone for ParenthesizedGenericArguments","synthetic":false,"types":[]},{"text":"impl Clone for Pat","synthetic":false,"types":[]},{"text":"impl Clone for PatBox","synthetic":false,"types":[]},{"text":"impl Clone for PatIdent","synthetic":false,"types":[]},{"text":"impl Clone for PatLit","synthetic":false,"types":[]},{"text":"impl Clone for PatMacro","synthetic":false,"types":[]},{"text":"impl Clone for PatOr","synthetic":false,"types":[]},{"text":"impl Clone for PatPath","synthetic":false,"types":[]},{"text":"impl Clone for PatRange","synthetic":false,"types":[]},{"text":"impl Clone for PatReference","synthetic":false,"types":[]},{"text":"impl Clone for PatRest","synthetic":false,"types":[]},{"text":"impl Clone for PatSlice","synthetic":false,"types":[]},{"text":"impl Clone for PatStruct","synthetic":false,"types":[]},{"text":"impl Clone for PatTuple","synthetic":false,"types":[]},{"text":"impl Clone for PatTupleStruct","synthetic":false,"types":[]},{"text":"impl Clone for PatType","synthetic":false,"types":[]},{"text":"impl Clone for PatWild","synthetic":false,"types":[]},{"text":"impl Clone for Path","synthetic":false,"types":[]},{"text":"impl Clone for PathArguments","synthetic":false,"types":[]},{"text":"impl Clone for PathSegment","synthetic":false,"types":[]},{"text":"impl Clone for PredicateEq","synthetic":false,"types":[]},{"text":"impl Clone for PredicateLifetime","synthetic":false,"types":[]},{"text":"impl Clone for PredicateType","synthetic":false,"types":[]},{"text":"impl Clone for QSelf","synthetic":false,"types":[]},{"text":"impl Clone for RangeLimits","synthetic":false,"types":[]},{"text":"impl Clone for Receiver","synthetic":false,"types":[]},{"text":"impl Clone for ReturnType","synthetic":false,"types":[]},{"text":"impl Clone for Signature","synthetic":false,"types":[]},{"text":"impl Clone for Stmt","synthetic":false,"types":[]},{"text":"impl Clone for TraitBound","synthetic":false,"types":[]},{"text":"impl Clone for TraitBoundModifier","synthetic":false,"types":[]},{"text":"impl Clone for TraitItem","synthetic":false,"types":[]},{"text":"impl Clone for TraitItemConst","synthetic":false,"types":[]},{"text":"impl Clone for TraitItemMacro","synthetic":false,"types":[]},{"text":"impl Clone for TraitItemMethod","synthetic":false,"types":[]},{"text":"impl Clone for TraitItemType","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for TypeArray","synthetic":false,"types":[]},{"text":"impl Clone for TypeBareFn","synthetic":false,"types":[]},{"text":"impl Clone for TypeGroup","synthetic":false,"types":[]},{"text":"impl Clone for TypeImplTrait","synthetic":false,"types":[]},{"text":"impl Clone for TypeInfer","synthetic":false,"types":[]},{"text":"impl Clone for TypeMacro","synthetic":false,"types":[]},{"text":"impl Clone for TypeNever","synthetic":false,"types":[]},{"text":"impl Clone for TypeParam","synthetic":false,"types":[]},{"text":"impl Clone for TypeParamBound","synthetic":false,"types":[]},{"text":"impl Clone for TypeParen","synthetic":false,"types":[]},{"text":"impl Clone for TypePath","synthetic":false,"types":[]},{"text":"impl Clone for TypePtr","synthetic":false,"types":[]},{"text":"impl Clone for TypeReference","synthetic":false,"types":[]},{"text":"impl Clone for TypeSlice","synthetic":false,"types":[]},{"text":"impl Clone for TypeTraitObject","synthetic":false,"types":[]},{"text":"impl Clone for TypeTuple","synthetic":false,"types":[]},{"text":"impl Clone for UnOp","synthetic":false,"types":[]},{"text":"impl Clone for UseGlob","synthetic":false,"types":[]},{"text":"impl Clone for UseGroup","synthetic":false,"types":[]},{"text":"impl Clone for UseName","synthetic":false,"types":[]},{"text":"impl Clone for UsePath","synthetic":false,"types":[]},{"text":"impl Clone for UseRename","synthetic":false,"types":[]},{"text":"impl Clone for UseTree","synthetic":false,"types":[]},{"text":"impl Clone for Variadic","synthetic":false,"types":[]},{"text":"impl Clone for Variant","synthetic":false,"types":[]},{"text":"impl Clone for VisCrate","synthetic":false,"types":[]},{"text":"impl Clone for VisPublic","synthetic":false,"types":[]},{"text":"impl Clone for VisRestricted","synthetic":false,"types":[]},{"text":"impl Clone for Visibility","synthetic":false,"types":[]},{"text":"impl Clone for WhereClause","synthetic":false,"types":[]},{"text":"impl Clone for WherePredicate","synthetic":false,"types":[]},{"text":"impl&lt;'c, 'a&gt; Clone for StepCursor&lt;'c, 'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["textwrap"] = [{"text":"impl Clone for NoHyphenation","synthetic":false,"types":[]},{"text":"impl Clone for HyphenSplitter","synthetic":false,"types":[]},{"text":"impl&lt;'a, S:&nbsp;Clone + WordSplitter&gt; Clone for Wrapper&lt;'a, S&gt;","synthetic":false,"types":[]}];
implementors["toml"] = [{"text":"impl Clone for Map&lt;String, Value&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Value","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["unicode_segmentation"] = [{"text":"impl&lt;'a&gt; Clone for GraphemeIndices&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Graphemes&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for GraphemeCursor","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for UWordBounds&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for UWordBoundIndices&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for UnicodeSentences&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for USentenceBounds&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for USentenceBoundIndices&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["vec_map"] = [{"text":"impl&lt;V:&nbsp;Clone&gt; Clone for VecMap&lt;V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, V&gt; Clone for Iter&lt;'a, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, V&gt; Clone for Keys&lt;'a, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, V&gt; Clone for Values&lt;'a, V&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()