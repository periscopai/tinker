(function() {var implementors = {};
implementors["ansi_term"] = [{"text":"impl Unpin for Prefix","synthetic":true,"types":[]},{"text":"impl Unpin for Infix","synthetic":true,"types":[]},{"text":"impl Unpin for Suffix","synthetic":true,"types":[]},{"text":"impl Unpin for Style","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Unpin for ANSIGenericString&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ToOwned&gt;::Owned: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; Unpin for ANSIGenericStrings&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Colour","synthetic":true,"types":[]}];
implementors["anyhow"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Chain&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["atty"] = [{"text":"impl Unpin for Stream","synthetic":true,"types":[]}];
implementors["clap"] = [{"text":"impl&lt;'a, 'b&gt; Unpin for App&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Unpin for Arg&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ArgGroup&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ArgMatches&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for OsValues&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SubCommand&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for AppSettings","synthetic":true,"types":[]},{"text":"impl Unpin for ArgSettings","synthetic":true,"types":[]},{"text":"impl Unpin for Shell","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorKind","synthetic":true,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; Unpin for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["futures_channel"] = [{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UnboundedSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SendError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for TryRecvError","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Cancellation&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Canceled","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for UnboundedReceiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":false,"types":[]}];
implementors["futures_executor"] = [{"text":"impl&lt;S&gt; Unpin for BlockingStream&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for LocalPool","synthetic":true,"types":[]},{"text":"impl Unpin for LocalSpawner","synthetic":true,"types":[]},{"text":"impl Unpin for Enter","synthetic":true,"types":[]},{"text":"impl Unpin for EnterError","synthetic":true,"types":[]}];
implementors["futures_task"] = [{"text":"impl Unpin for SpawnError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for WakerRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, '_&gt; Unpin for LocalFutureObj&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, '_&gt; Unpin for FutureObj&lt;'_, T&gt;","synthetic":false,"types":[]}];
implementors["futures_util"] = [{"text":"impl&lt;F&gt; Unpin for JoinAll&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for TryJoinAll&lt;F&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for AbortHandle","synthetic":true,"types":[]},{"text":"impl Unpin for AbortRegistration","synthetic":true,"types":[]},{"text":"impl Unpin for Aborted","synthetic":true,"types":[]},{"text":"impl&lt;'a, St:&nbsp;?Sized&gt; Unpin for SelectNextSome&lt;'a, St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Unpin for StreamFuture&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St&gt; Unpin for SelectAll&lt;St&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; Unpin for Iter&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; Unpin for IterMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; Unpin for IterPinMut&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, Fut&gt; Unpin for IterPinRef&lt;'a, Fut&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized, U:&nbsp;?Sized&gt; Unpin for MappedMutexGuard&lt;'a, T, U&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Unpin for Mutex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for MutexLockFuture&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'pin, Fut&gt; Unpin for Fuse&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Fuse&lt;'pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, F&gt; Unpin for Flatten&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future,<br>&nbsp;&nbsp;&nbsp;&nbsp;__Flatten&lt;'pin, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, F&gt; Unpin for FlattenStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Future,<br>&nbsp;&nbsp;&nbsp;&nbsp;__FlattenStream&lt;'pin, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, F&gt; Unpin for Map&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Map&lt;'pin, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, F&gt; Unpin for IntoStream&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__IntoStream&lt;'pin, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, T&gt; Unpin for MapInto&lt;Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__MapInto&lt;'pin, Fut, T&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1, Fut2, F&gt; Unpin for Then&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Then&lt;'pin, Fut1, Fut2, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, F&gt; Unpin for Inspect&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Inspect&lt;'pin, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut&gt; Unpin for NeverError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__NeverError&lt;'pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut&gt; Unpin for UnitError&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__UnitError&lt;'pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut&gt; Unpin for CatchUnwind&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__CatchUnwind&lt;'pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Fut:&nbsp;Future&gt; Unpin for Shared&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut&gt; Unpin for IntoFuture&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__IntoFuture&lt;'pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1, Fut2&gt; Unpin for TryFlatten&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryFlatten&lt;'pin, Fut1, Fut2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut&gt; Unpin for TryFlattenStream&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: TryFuture,<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryFlattenStream&lt;'pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1, Fut2, F&gt; Unpin for AndThen&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__AndThen&lt;'pin, Fut1, Fut2, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1, Fut2, F&gt; Unpin for OrElse&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__OrElse&lt;'pin, Fut1, Fut2, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, E&gt; Unpin for ErrInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__ErrInto&lt;'pin, Fut, E&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, E&gt; Unpin for OkInto&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__OkInto&lt;'pin, Fut, E&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, F&gt; Unpin for InspectOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__InspectOk&lt;'pin, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, F&gt; Unpin for InspectErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__InspectErr&lt;'pin, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, F&gt; Unpin for MapOk&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__MapOk&lt;'pin, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, F&gt; Unpin for MapErr&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__MapErr&lt;'pin, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, F, G&gt; Unpin for MapOkOrElse&lt;Fut, F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__MapOkOrElse&lt;'pin, Fut, F, G&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut, F&gt; Unpin for UnwrapOrElse&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__UnwrapOrElse&lt;'pin, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; Unpin for Lazy&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Pending&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut:&nbsp;Future&gt; Unpin for MaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__MaybeDone&lt;'pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut:&nbsp;TryFuture&gt; Unpin for TryMaybeDone&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryMaybeDone&lt;'pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, F&gt; Unpin for OptionFuture&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__OptionFuture&lt;'pin, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; Unpin for PollFn&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Ready&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1:&nbsp;Future, Fut2:&nbsp;Future&gt; Unpin for Join&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Join&lt;'pin, Fut1, Fut2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1:&nbsp;Future, Fut2:&nbsp;Future, Fut3:&nbsp;Future&gt; Unpin for Join3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Join3&lt;'pin, Fut1, Fut2, Fut3&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1:&nbsp;Future, Fut2:&nbsp;Future, Fut3:&nbsp;Future, Fut4:&nbsp;Future&gt; Unpin for Join4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Join4&lt;'pin, Fut1, Fut2, Fut3, Fut4&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1:&nbsp;Future, Fut2:&nbsp;Future, Fut3:&nbsp;Future, Fut4:&nbsp;Future, Fut5:&nbsp;Future&gt; Unpin for Join5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Join5&lt;'pin, Fut1, Fut2, Fut3, Fut4, Fut5&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Unpin, B:&nbsp;Unpin&gt; Unpin for Select&lt;A, B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut:&nbsp;Unpin&gt; Unpin for SelectAll&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1:&nbsp;TryFuture, Fut2:&nbsp;TryFuture&gt; Unpin for TryJoin&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryJoin&lt;'pin, Fut1, Fut2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1:&nbsp;TryFuture, Fut2:&nbsp;TryFuture, Fut3:&nbsp;TryFuture&gt; Unpin for TryJoin3&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryJoin3&lt;'pin, Fut1, Fut2, Fut3&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1:&nbsp;TryFuture, Fut2:&nbsp;TryFuture, Fut3:&nbsp;TryFuture, Fut4:&nbsp;TryFuture&gt; Unpin for TryJoin4&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryJoin4&lt;'pin, Fut1, Fut2, Fut3, Fut4&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut1:&nbsp;TryFuture, Fut2:&nbsp;TryFuture, Fut3:&nbsp;TryFuture, Fut4:&nbsp;TryFuture, Fut5:&nbsp;TryFuture&gt; Unpin for TryJoin5&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryJoin5&lt;'pin, Fut1, Fut2, Fut3, Fut4, Fut5&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Unpin, B:&nbsp;Unpin&gt; Unpin for TrySelect&lt;A, B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut:&nbsp;Unpin&gt; Unpin for SelectOk&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, A, B&gt; Unpin for Either&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Either&lt;'pin, A, B&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut&gt; Unpin for Abortable&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Abortable&lt;'pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St1, St2&gt; Unpin for Chain&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Chain&lt;'pin, St1, St2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, C&gt; Unpin for Collect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Collect&lt;'pin, St, C&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St:&nbsp;Stream&gt; Unpin for Concat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Concat&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for Enumerate&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Enumerate&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for Filter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;__Filter&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for FilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__FilterMap&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for Flatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;__Flatten&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, T, F&gt; Unpin for Fold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Fold&lt;'pin, St, Fut, T, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for ForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__ForEach&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for Fuse&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Fuse&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, F&gt; Unpin for Inspect&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Inspect&lt;'pin, St, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, F&gt; Unpin for Map&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Map&lt;'pin, St, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, U, F&gt; Unpin for FlatMap&lt;St, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__FlatMap&lt;'pin, St, U, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;St:&nbsp;?Sized + Unpin, '_&gt; Unpin for Next&lt;'_, St&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St:&nbsp;Stream&gt; Unpin for Peekable&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Peekable&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, 'a, St:&nbsp;Stream&gt; Unpin for Peek&lt;'a, St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Peek&lt;'pin, 'a, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for Skip&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Skip&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for SkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;__SkipWhile&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for Take&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Take&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St:&nbsp;Stream, Fut, F&gt; Unpin for TakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TakeWhile&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St:&nbsp;Stream, Fut:&nbsp;Future&gt; Unpin for TakeUntil&lt;St, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TakeUntil&lt;'pin, St, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for Then&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Then&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St1:&nbsp;Stream, St2:&nbsp;Stream&gt; Unpin for Zip&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Zip&lt;'pin, St1, St2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St:&nbsp;Stream&gt; Unpin for Chunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Chunks&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St:&nbsp;Stream&gt; Unpin for ReadyChunks&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__ReadyChunks&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St:&nbsp;Stream, S, Fut, F&gt; Unpin for Scan&lt;St, S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Scan&lt;'pin, St, S, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for BufferUnordered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;__BufferUnordered&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for Buffered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Stream,<br>&nbsp;&nbsp;&nbsp;&nbsp;St::Item: Future,<br>&nbsp;&nbsp;&nbsp;&nbsp;__Buffered&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for ForEachConcurrent&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__ForEachConcurrent&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for CatchUnwind&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__CatchUnwind&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for AndThen&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__AndThen&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, E&gt; Unpin for ErrInto&lt;St, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__ErrInto&lt;'pin, St, E&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, F&gt; Unpin for InspectOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__InspectOk&lt;'pin, St, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, F&gt; Unpin for InspectErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__InspectErr&lt;'pin, St, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for IntoStream&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__IntoStream&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, F&gt; Unpin for MapOk&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__MapOk&lt;'pin, St, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, F&gt; Unpin for MapErr&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__MapErr&lt;'pin, St, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for OrElse&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__OrElse&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;St:&nbsp;?Sized + Unpin, '_&gt; Unpin for TryNext&lt;'_, St&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for TryForEach&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryForEach&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for TryFilter&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryFilter&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for TryFilterMap&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryFilterMap&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for TryFlatten&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryFlatten&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, C&gt; Unpin for TryCollect&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryCollect&lt;'pin, St, C&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St:&nbsp;TryStream&gt; Unpin for TryConcat&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryConcat&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, T, F&gt; Unpin for TryFold&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryFold&lt;'pin, St, Fut, T, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, T, F, Fut&gt; Unpin for TryUnfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryUnfold&lt;'pin, T, F, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for TrySkipWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,<br>&nbsp;&nbsp;&nbsp;&nbsp;__TrySkipWhile&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for TryTakeWhile&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryTakeWhile&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St&gt; Unpin for TryBufferUnordered&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: TryStream,<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryBufferUnordered&lt;'pin, St&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St, Fut, F&gt; Unpin for TryForEachConcurrent&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__TryForEachConcurrent&lt;'pin, St, Fut, F&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I&gt; Unpin for Iter&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Repeat&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Empty&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, Fut&gt; Unpin for Once&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Once&lt;'pin, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Unpin for Pending&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; Unpin for PollFn&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'pin, St1, St2&gt; Unpin for Select&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Select&lt;'pin, St1, St2&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'pin, T, F, Fut&gt; Unpin for Unfold&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__Unfold&lt;'pin, T, F, Fut&gt;: Unpin,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Future&gt; Unpin for FuturesOrdered&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut&gt; Unpin for FuturesUnordered&lt;Fut&gt;","synthetic":false,"types":[]}];
implementors["glib"] = [{"text":"impl Unpin for ByteArray","synthetic":true,"types":[]},{"text":"impl Unpin for Bytes","synthetic":true,"types":[]},{"text":"impl Unpin for String","synthetic":true,"types":[]},{"text":"impl Unpin for EnumClass","synthetic":true,"types":[]},{"text":"impl Unpin for EnumValue","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for FlagsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for FlagsClass","synthetic":true,"types":[]},{"text":"impl Unpin for FlagsValue","synthetic":true,"types":[]},{"text":"impl Unpin for VariantDict","synthetic":true,"types":[]},{"text":"impl Unpin for VariantTy","synthetic":true,"types":[]},{"text":"impl Unpin for VariantType","synthetic":true,"types":[]},{"text":"impl Unpin for Checksum","synthetic":true,"types":[]},{"text":"impl Unpin for DateTime","synthetic":true,"types":[]},{"text":"impl Unpin for KeyFile","synthetic":true,"types":[]},{"text":"impl Unpin for MainContext","synthetic":true,"types":[]},{"text":"impl Unpin for MainLoop","synthetic":true,"types":[]},{"text":"impl Unpin for Source","synthetic":true,"types":[]},{"text":"impl Unpin for TimeZone","synthetic":true,"types":[]},{"text":"impl Unpin for FileTest","synthetic":true,"types":[]},{"text":"impl Unpin for FormatSizeFlags","synthetic":true,"types":[]},{"text":"impl Unpin for IOCondition","synthetic":true,"types":[]},{"text":"impl Unpin for KeyFileFlags","synthetic":true,"types":[]},{"text":"impl Unpin for LogLevelFlags","synthetic":true,"types":[]},{"text":"impl Unpin for OptionFlags","synthetic":true,"types":[]},{"text":"impl Unpin for SpawnFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Binding","synthetic":true,"types":[]},{"text":"impl Unpin for BindingClass","synthetic":true,"types":[]},{"text":"impl Unpin for BindingFlags","synthetic":true,"types":[]},{"text":"impl Unpin for ParamFlags","synthetic":true,"types":[]},{"text":"impl Unpin for SignalFlags","synthetic":true,"types":[]},{"text":"impl Unpin for GString","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Receiver&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SyncSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Date","synthetic":true,"types":[]},{"text":"impl Unpin for ValueArray","synthetic":true,"types":[]},{"text":"impl Unpin for ParamSpec","synthetic":true,"types":[]},{"text":"impl Unpin for Quark","synthetic":true,"types":[]},{"text":"impl Unpin for LogHandlerId","synthetic":true,"types":[]},{"text":"impl Unpin for LogLevels","synthetic":true,"types":[]},{"text":"impl Unpin for ThreadPool","synthetic":true,"types":[]},{"text":"impl Unpin for FileError","synthetic":true,"types":[]},{"text":"impl Unpin for UserDirectory","synthetic":true,"types":[]},{"text":"impl Unpin for ChecksumType","synthetic":true,"types":[]},{"text":"impl Unpin for DateMonth","synthetic":true,"types":[]},{"text":"impl Unpin for DateWeekday","synthetic":true,"types":[]},{"text":"impl Unpin for KeyFileError","synthetic":true,"types":[]},{"text":"impl Unpin for OptionArg","synthetic":true,"types":[]},{"text":"impl Unpin for SeekType","synthetic":true,"types":[]},{"text":"impl Unpin for TimeType","synthetic":true,"types":[]},{"text":"impl Unpin for LogLevel","synthetic":true,"types":[]},{"text":"impl&lt;T, MM&gt; Unpin for Boxed&lt;T, MM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;MM: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, MM&gt; Unpin for Shared&lt;T, MM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;MM: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for BoolError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ClassRef&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectRef","synthetic":true,"types":[]},{"text":"impl Unpin for Object","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectClass","synthetic":true,"types":[]},{"text":"impl Unpin for InitiallyUnowned","synthetic":true,"types":[]},{"text":"impl Unpin for InitiallyUnownedClass","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for WeakRef&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SendWeakRef&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for BindingBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Char","synthetic":true,"types":[]},{"text":"impl Unpin for UChar","synthetic":true,"types":[]},{"text":"impl Unpin for Closure","synthetic":true,"types":[]},{"text":"impl Unpin for SignalHandlerId","synthetic":true,"types":[]},{"text":"impl Unpin for Inhibit","synthetic":true,"types":[]},{"text":"impl Unpin for SourceId","synthetic":true,"types":[]},{"text":"impl Unpin for Pid","synthetic":true,"types":[]},{"text":"impl Unpin for Continue","synthetic":true,"types":[]},{"text":"impl Unpin for Priority","synthetic":true,"types":[]},{"text":"impl&lt;'a, P, T:&nbsp;?Sized&gt; Unpin for Stash&lt;'a, P, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as ToGlibPtr&lt;'a, P&gt;&gt;::Storage: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, P, T:&nbsp;?Sized&gt; Unpin for StashMut&lt;'a, P, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as ToGlibPtrMut&lt;'a, P&gt;&gt;::Storage: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Borrowed&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for List","synthetic":true,"types":[]},{"text":"impl Unpin for SList","synthetic":true,"types":[]},{"text":"impl Unpin for HashTable","synthetic":true,"types":[]},{"text":"impl Unpin for Array","synthetic":true,"types":[]},{"text":"impl Unpin for PtrArray","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for GetError","synthetic":true,"types":[]},{"text":"impl Unpin for Value","synthetic":true,"types":[]},{"text":"impl Unpin for ValueArray","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TypedValue&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SendValue","synthetic":true,"types":[]},{"text":"impl Unpin for Variant","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SendUniqueCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for BorrowError","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Ref&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for InstanceStruct&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as ObjectSubclass&gt;::ParentType as ObjectType&gt;::GlibType: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ClassStruct&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as ObjectSubclass&gt;::ParentType as ObjectType&gt;::GlibClassType: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for InitializingType&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for TypeData","synthetic":true,"types":[]},{"text":"impl Unpin for SignalInvocationHint","synthetic":true,"types":[]},{"text":"impl Unpin for SignalClassHandlerToken","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Property&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Boxed&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F, T&gt; Unpin for SourceFuture&lt;F, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F, T&gt; Unpin for SourceStream&lt;F, T&gt;","synthetic":false,"types":[]}];
implementors["glib_sys"] = [{"text":"impl Unpin for GPollFD","synthetic":true,"types":[]},{"text":"impl Unpin for GDoubleIEEE754","synthetic":true,"types":[]},{"text":"impl Unpin for GFloatIEEE754","synthetic":true,"types":[]},{"text":"impl Unpin for GArray","synthetic":true,"types":[]},{"text":"impl Unpin for _GAsyncQueue","synthetic":true,"types":[]},{"text":"impl Unpin for _GBookmarkFile","synthetic":true,"types":[]},{"text":"impl Unpin for GByteArray","synthetic":true,"types":[]},{"text":"impl Unpin for GBytes","synthetic":true,"types":[]},{"text":"impl Unpin for GChecksum","synthetic":true,"types":[]},{"text":"impl Unpin for GCond","synthetic":true,"types":[]},{"text":"impl Unpin for _GData","synthetic":true,"types":[]},{"text":"impl Unpin for GDate","synthetic":true,"types":[]},{"text":"impl Unpin for GDateTime","synthetic":true,"types":[]},{"text":"impl Unpin for GDebugKey","synthetic":true,"types":[]},{"text":"impl Unpin for _GDir","synthetic":true,"types":[]},{"text":"impl Unpin for GDoubleIEEE754_mpn","synthetic":true,"types":[]},{"text":"impl Unpin for GError","synthetic":true,"types":[]},{"text":"impl Unpin for GFloatIEEE754_mpn","synthetic":true,"types":[]},{"text":"impl Unpin for GHashTable","synthetic":true,"types":[]},{"text":"impl Unpin for GHashTableIter","synthetic":true,"types":[]},{"text":"impl Unpin for _GHmac","synthetic":true,"types":[]},{"text":"impl Unpin for GHook","synthetic":true,"types":[]},{"text":"impl Unpin for GHookList","synthetic":true,"types":[]},{"text":"impl Unpin for _GIConv","synthetic":true,"types":[]},{"text":"impl Unpin for GIOChannel","synthetic":true,"types":[]},{"text":"impl Unpin for GIOFuncs","synthetic":true,"types":[]},{"text":"impl Unpin for GKeyFile","synthetic":true,"types":[]},{"text":"impl Unpin for GList","synthetic":true,"types":[]},{"text":"impl Unpin for GLogField","synthetic":true,"types":[]},{"text":"impl Unpin for GMainContext","synthetic":true,"types":[]},{"text":"impl Unpin for GMainLoop","synthetic":true,"types":[]},{"text":"impl Unpin for GMappedFile","synthetic":true,"types":[]},{"text":"impl Unpin for GMarkupParseContext","synthetic":true,"types":[]},{"text":"impl Unpin for GMarkupParser","synthetic":true,"types":[]},{"text":"impl Unpin for GMatchInfo","synthetic":true,"types":[]},{"text":"impl Unpin for GMemVTable","synthetic":true,"types":[]},{"text":"impl Unpin for GNode","synthetic":true,"types":[]},{"text":"impl Unpin for GOnce","synthetic":true,"types":[]},{"text":"impl Unpin for _GOptionContext","synthetic":true,"types":[]},{"text":"impl Unpin for GOptionEntry","synthetic":true,"types":[]},{"text":"impl Unpin for GOptionGroup","synthetic":true,"types":[]},{"text":"impl Unpin for _GPatternSpec","synthetic":true,"types":[]},{"text":"impl Unpin for GPrivate","synthetic":true,"types":[]},{"text":"impl Unpin for GPtrArray","synthetic":true,"types":[]},{"text":"impl Unpin for GQueue","synthetic":true,"types":[]},{"text":"impl Unpin for GRWLock","synthetic":true,"types":[]},{"text":"impl Unpin for _GRand","synthetic":true,"types":[]},{"text":"impl Unpin for GRecMutex","synthetic":true,"types":[]},{"text":"impl Unpin for GRegex","synthetic":true,"types":[]},{"text":"impl Unpin for GSList","synthetic":true,"types":[]},{"text":"impl Unpin for GScanner","synthetic":true,"types":[]},{"text":"impl Unpin for GScannerConfig","synthetic":true,"types":[]},{"text":"impl Unpin for _GSequence","synthetic":true,"types":[]},{"text":"impl Unpin for _GSequenceIter","synthetic":true,"types":[]},{"text":"impl Unpin for GSource","synthetic":true,"types":[]},{"text":"impl Unpin for GSourceCallbackFuncs","synthetic":true,"types":[]},{"text":"impl Unpin for GSourceFuncs","synthetic":true,"types":[]},{"text":"impl Unpin for _GSourcePrivate","synthetic":true,"types":[]},{"text":"impl Unpin for _GStatBuf","synthetic":true,"types":[]},{"text":"impl Unpin for GString","synthetic":true,"types":[]},{"text":"impl Unpin for _GStringChunk","synthetic":true,"types":[]},{"text":"impl Unpin for _GTestCase","synthetic":true,"types":[]},{"text":"impl Unpin for GTestConfig","synthetic":true,"types":[]},{"text":"impl Unpin for GTestLogBuffer","synthetic":true,"types":[]},{"text":"impl Unpin for GTestLogMsg","synthetic":true,"types":[]},{"text":"impl Unpin for _GTestSuite","synthetic":true,"types":[]},{"text":"impl Unpin for GThread","synthetic":true,"types":[]},{"text":"impl Unpin for GThreadPool","synthetic":true,"types":[]},{"text":"impl Unpin for GTimeVal","synthetic":true,"types":[]},{"text":"impl Unpin for GTimeZone","synthetic":true,"types":[]},{"text":"impl Unpin for _GTimer","synthetic":true,"types":[]},{"text":"impl Unpin for GTrashStack","synthetic":true,"types":[]},{"text":"impl Unpin for _GTree","synthetic":true,"types":[]},{"text":"impl Unpin for GVariant","synthetic":true,"types":[]},{"text":"impl Unpin for GVariantBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for GVariantBuilder_u_s","synthetic":true,"types":[]},{"text":"impl Unpin for GVariantDict","synthetic":true,"types":[]},{"text":"impl Unpin for GVariantDict_u_s","synthetic":true,"types":[]},{"text":"impl Unpin for GVariantIter","synthetic":true,"types":[]},{"text":"impl Unpin for GVariantType","synthetic":true,"types":[]},{"text":"impl Unpin for GMutex","synthetic":true,"types":[]},{"text":"impl Unpin for GTokenValue","synthetic":true,"types":[]},{"text":"impl Unpin for GVariantBuilder_u","synthetic":true,"types":[]},{"text":"impl Unpin for GVariantDict_u","synthetic":true,"types":[]}];
implementors["gobject_sys"] = [{"text":"impl Unpin for GTypeCValue","synthetic":true,"types":[]},{"text":"impl Unpin for GCClosure","synthetic":true,"types":[]},{"text":"impl Unpin for GClosure","synthetic":true,"types":[]},{"text":"impl Unpin for GClosureNotifyData","synthetic":true,"types":[]},{"text":"impl Unpin for GEnumClass","synthetic":true,"types":[]},{"text":"impl Unpin for GEnumValue","synthetic":true,"types":[]},{"text":"impl Unpin for GFlagsClass","synthetic":true,"types":[]},{"text":"impl Unpin for GFlagsValue","synthetic":true,"types":[]},{"text":"impl Unpin for GInitiallyUnownedClass","synthetic":true,"types":[]},{"text":"impl Unpin for GInterfaceInfo","synthetic":true,"types":[]},{"text":"impl Unpin for GObjectClass","synthetic":true,"types":[]},{"text":"impl Unpin for GObjectConstructParam","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecClass","synthetic":true,"types":[]},{"text":"impl Unpin for _GParamSpecPool","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecTypeInfo","synthetic":true,"types":[]},{"text":"impl Unpin for GParameter","synthetic":true,"types":[]},{"text":"impl Unpin for GSignalInvocationHint","synthetic":true,"types":[]},{"text":"impl Unpin for GSignalQuery","synthetic":true,"types":[]},{"text":"impl Unpin for GTypeClass","synthetic":true,"types":[]},{"text":"impl Unpin for GTypeFundamentalInfo","synthetic":true,"types":[]},{"text":"impl Unpin for GTypeInfo","synthetic":true,"types":[]},{"text":"impl Unpin for GTypeInstance","synthetic":true,"types":[]},{"text":"impl Unpin for GTypeInterface","synthetic":true,"types":[]},{"text":"impl Unpin for GTypeModuleClass","synthetic":true,"types":[]},{"text":"impl Unpin for GTypePluginClass","synthetic":true,"types":[]},{"text":"impl Unpin for GTypeQuery","synthetic":true,"types":[]},{"text":"impl Unpin for GTypeValueTable","synthetic":true,"types":[]},{"text":"impl Unpin for GValue","synthetic":true,"types":[]},{"text":"impl Unpin for GValueArray","synthetic":true,"types":[]},{"text":"impl Unpin for GWeakRef","synthetic":true,"types":[]},{"text":"impl Unpin for GBinding","synthetic":true,"types":[]},{"text":"impl Unpin for GInitiallyUnowned","synthetic":true,"types":[]},{"text":"impl Unpin for GObject","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpec","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecBoolean","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecBoxed","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecChar","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecDouble","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecEnum","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecFlags","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecFloat","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecGType","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecInt","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecInt64","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecLong","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecObject","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecOverride","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecParam","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecPointer","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecString","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecUChar","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecUInt","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecUInt64","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecULong","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecUnichar","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecValueArray","synthetic":true,"types":[]},{"text":"impl Unpin for GParamSpecVariant","synthetic":true,"types":[]},{"text":"impl Unpin for GTypeModule","synthetic":true,"types":[]},{"text":"impl Unpin for GTypePlugin","synthetic":true,"types":[]},{"text":"impl Unpin for GValue_data","synthetic":true,"types":[]},{"text":"impl Unpin for GWeakRef_priv","synthetic":true,"types":[]}];
implementors["gstreamer"] = [{"text":"impl Unpin for Allocator","synthetic":true,"types":[]},{"text":"impl Unpin for AllocatorClass","synthetic":true,"types":[]},{"text":"impl Unpin for Bin","synthetic":true,"types":[]},{"text":"impl Unpin for BinClass","synthetic":true,"types":[]},{"text":"impl Unpin for BufferPool","synthetic":true,"types":[]},{"text":"impl Unpin for BufferPoolClass","synthetic":true,"types":[]},{"text":"impl Unpin for Bus","synthetic":true,"types":[]},{"text":"impl Unpin for BusClass","synthetic":true,"types":[]},{"text":"impl Unpin for ChildProxy","synthetic":true,"types":[]},{"text":"impl Unpin for Clock","synthetic":true,"types":[]},{"text":"impl Unpin for ClockClass","synthetic":true,"types":[]},{"text":"impl Unpin for Device","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceClass","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceMonitor","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceMonitorClass","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceProvider","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceProviderClass","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceProviderFactory","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceProviderFactoryClass","synthetic":true,"types":[]},{"text":"impl Unpin for Element","synthetic":true,"types":[]},{"text":"impl Unpin for ElementClass","synthetic":true,"types":[]},{"text":"impl Unpin for ElementFactory","synthetic":true,"types":[]},{"text":"impl Unpin for ElementFactoryClass","synthetic":true,"types":[]},{"text":"impl Unpin for GhostPad","synthetic":true,"types":[]},{"text":"impl Unpin for GhostPadClass","synthetic":true,"types":[]},{"text":"impl Unpin for Object","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectClass","synthetic":true,"types":[]},{"text":"impl Unpin for Pad","synthetic":true,"types":[]},{"text":"impl Unpin for PadClass","synthetic":true,"types":[]},{"text":"impl Unpin for PadTemplate","synthetic":true,"types":[]},{"text":"impl Unpin for PadTemplateClass","synthetic":true,"types":[]},{"text":"impl Unpin for Pipeline","synthetic":true,"types":[]},{"text":"impl Unpin for PipelineClass","synthetic":true,"types":[]},{"text":"impl Unpin for Plugin","synthetic":true,"types":[]},{"text":"impl Unpin for PluginClass","synthetic":true,"types":[]},{"text":"impl Unpin for PluginFeature","synthetic":true,"types":[]},{"text":"impl Unpin for PluginFeatureClass","synthetic":true,"types":[]},{"text":"impl Unpin for Preset","synthetic":true,"types":[]},{"text":"impl Unpin for ProxyPad","synthetic":true,"types":[]},{"text":"impl Unpin for ProxyPadClass","synthetic":true,"types":[]},{"text":"impl Unpin for Registry","synthetic":true,"types":[]},{"text":"impl Unpin for RegistryClass","synthetic":true,"types":[]},{"text":"impl Unpin for SystemClock","synthetic":true,"types":[]},{"text":"impl Unpin for SystemClockClass","synthetic":true,"types":[]},{"text":"impl Unpin for TagSetter","synthetic":true,"types":[]},{"text":"impl Unpin for TocSetter","synthetic":true,"types":[]},{"text":"impl Unpin for TypeFindFactory","synthetic":true,"types":[]},{"text":"impl Unpin for TypeFindFactoryClass","synthetic":true,"types":[]},{"text":"impl Unpin for URIHandler","synthetic":true,"types":[]},{"text":"impl Unpin for DateTime","synthetic":true,"types":[]},{"text":"impl Unpin for BinFlags","synthetic":true,"types":[]},{"text":"impl Unpin for BufferCopyFlags","synthetic":true,"types":[]},{"text":"impl Unpin for BufferFlags","synthetic":true,"types":[]},{"text":"impl Unpin for BufferPoolAcquireFlags","synthetic":true,"types":[]},{"text":"impl Unpin for ClockFlags","synthetic":true,"types":[]},{"text":"impl Unpin for DebugColorFlags","synthetic":true,"types":[]},{"text":"impl Unpin for DebugGraphDetails","synthetic":true,"types":[]},{"text":"impl Unpin for ElementFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryFlags","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectFlags","synthetic":true,"types":[]},{"text":"impl Unpin for PadFlags","synthetic":true,"types":[]},{"text":"impl Unpin for PadLinkCheck","synthetic":true,"types":[]},{"text":"impl Unpin for PadProbeType","synthetic":true,"types":[]},{"text":"impl Unpin for ParseFlags","synthetic":true,"types":[]},{"text":"impl Unpin for PipelineFlags","synthetic":true,"types":[]},{"text":"impl Unpin for PluginDependencyFlags","synthetic":true,"types":[]},{"text":"impl Unpin for PluginFlags","synthetic":true,"types":[]},{"text":"impl Unpin for SchedulingFlags","synthetic":true,"types":[]},{"text":"impl Unpin for SeekFlags","synthetic":true,"types":[]},{"text":"impl Unpin for SegmentFlags","synthetic":true,"types":[]},{"text":"impl Unpin for StreamFlags","synthetic":true,"types":[]},{"text":"impl Unpin for DebugMessage","synthetic":true,"types":[]},{"text":"impl Unpin for DebugCategory","synthetic":true,"types":[]},{"text":"impl Unpin for DebugLogFunction","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorMessage","synthetic":true,"types":[]},{"text":"impl Unpin for LoggableError","synthetic":true,"types":[]},{"text":"impl Unpin for Fraction","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntRange&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FractionRange","synthetic":true,"types":[]},{"text":"impl Unpin for Bitmask","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Array&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for List&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for CapsFeatures","synthetic":true,"types":[]},{"text":"impl Unpin for CapsFeaturesRef","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for BufferCursor&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for BufferRefCursor&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for StaticCaps","synthetic":true,"types":[]},{"text":"impl Unpin for StaticPadTemplate","synthetic":true,"types":[]},{"text":"impl Unpin for AllocationParams","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for PadBuilder&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for NotifyWatchId","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Iterator&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for StdIterator&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ClockTime","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceMonitorFilterId","synthetic":true,"types":[]},{"text":"impl Unpin for PadLinkSuccess","synthetic":true,"types":[]},{"text":"impl Unpin for StateChangeError","synthetic":true,"types":[]},{"text":"impl Unpin for PadProbeId","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PadProbeInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ParseContext","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TypeFind&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SliceTypeFind&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FormattedSegment&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for AtomicClockReturn","synthetic":true,"types":[]},{"text":"impl Unpin for ClockId","synthetic":true,"types":[]},{"text":"impl Unpin for BufferPoolConfig","synthetic":true,"types":[]},{"text":"impl Unpin for BufferPoolAcquireParams","synthetic":true,"types":[]},{"text":"impl Unpin for BufferingMode","synthetic":true,"types":[]},{"text":"impl Unpin for BusSyncReply","synthetic":true,"types":[]},{"text":"impl Unpin for CapsIntersectMode","synthetic":true,"types":[]},{"text":"impl Unpin for ClockEntryType","synthetic":true,"types":[]},{"text":"impl Unpin for ClockReturn","synthetic":true,"types":[]},{"text":"impl Unpin for ClockType","synthetic":true,"types":[]},{"text":"impl Unpin for CoreError","synthetic":true,"types":[]},{"text":"impl Unpin for DebugLevel","synthetic":true,"types":[]},{"text":"impl Unpin for EventType","synthetic":true,"types":[]},{"text":"impl Unpin for FlowReturn","synthetic":true,"types":[]},{"text":"impl Unpin for Format","synthetic":true,"types":[]},{"text":"impl Unpin for LibraryError","synthetic":true,"types":[]},{"text":"impl Unpin for PadDirection","synthetic":true,"types":[]},{"text":"impl Unpin for PadLinkReturn","synthetic":true,"types":[]},{"text":"impl Unpin for PadMode","synthetic":true,"types":[]},{"text":"impl Unpin for PadPresence","synthetic":true,"types":[]},{"text":"impl Unpin for PadProbeReturn","synthetic":true,"types":[]},{"text":"impl Unpin for ParseError","synthetic":true,"types":[]},{"text":"impl Unpin for PluginError","synthetic":true,"types":[]},{"text":"impl Unpin for ProgressType","synthetic":true,"types":[]},{"text":"impl Unpin for QOSType","synthetic":true,"types":[]},{"text":"impl Unpin for Rank","synthetic":true,"types":[]},{"text":"impl Unpin for ResourceError","synthetic":true,"types":[]},{"text":"impl Unpin for SeekType","synthetic":true,"types":[]},{"text":"impl Unpin for State","synthetic":true,"types":[]},{"text":"impl Unpin for StateChange","synthetic":true,"types":[]},{"text":"impl Unpin for StateChangeReturn","synthetic":true,"types":[]},{"text":"impl Unpin for StreamError","synthetic":true,"types":[]},{"text":"impl Unpin for StreamStatusType","synthetic":true,"types":[]},{"text":"impl Unpin for StructureChangeType","synthetic":true,"types":[]},{"text":"impl Unpin for TagFlag","synthetic":true,"types":[]},{"text":"impl Unpin for TagMergeMode","synthetic":true,"types":[]},{"text":"impl Unpin for TagScope","synthetic":true,"types":[]},{"text":"impl Unpin for TaskState","synthetic":true,"types":[]},{"text":"impl Unpin for TocEntryType","synthetic":true,"types":[]},{"text":"impl Unpin for TocLoopType","synthetic":true,"types":[]},{"text":"impl Unpin for TocScope","synthetic":true,"types":[]},{"text":"impl Unpin for TypeFindProbability","synthetic":true,"types":[]},{"text":"impl Unpin for URIError","synthetic":true,"types":[]},{"text":"impl Unpin for URIType","synthetic":true,"types":[]},{"text":"impl Unpin for MessageType","synthetic":true,"types":[]},{"text":"impl Unpin for ElementMessageType","synthetic":true,"types":[]},{"text":"impl Unpin for IteratorError","synthetic":true,"types":[]},{"text":"impl Unpin for ClockError","synthetic":true,"types":[]},{"text":"impl Unpin for ClockSuccess","synthetic":true,"types":[]},{"text":"impl Unpin for FlowError","synthetic":true,"types":[]},{"text":"impl Unpin for FlowSuccess","synthetic":true,"types":[]},{"text":"impl Unpin for PadLinkError","synthetic":true,"types":[]},{"text":"impl Unpin for StateChangeSuccess","synthetic":true,"types":[]},{"text":"impl Unpin for TagError","synthetic":true,"types":[]},{"text":"impl Unpin for PadGetRangeSuccess","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PadProbeData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Message","synthetic":true,"types":[]},{"text":"impl Unpin for MessageRef","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Eos&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Error&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Warning&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Info&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Tag&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Buffering&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StateChanged&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StateDirty&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StepDone&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ClockProvide&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ClockLost&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for NewClock&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StructureChange&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StreamStatus&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Application&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Element&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SegmentStart&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SegmentDone&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DurationChanged&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Latency&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for AsyncStart&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for AsyncDone&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RequestState&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StepStart&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Qos&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Progress&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Toc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ResetTime&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StreamStart&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for NeedContext&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for HaveContext&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DeviceAdded&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DeviceRemoved&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PropertyNotify&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StreamCollection&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StreamsSelected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Redirect&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DeviceChanged&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for EosBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for ErrorBuilder&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for WarningBuilder&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for InfoBuilder&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TagBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for BufferingBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StateChangedBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StateDirtyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StepDoneBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ClockProvideBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ClockLostBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for NewClockBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StructureChangeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StreamStatusBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ApplicationBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ElementBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SegmentStartBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SegmentDoneBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DurationChangedBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for LatencyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for AsyncStartBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for AsyncDoneBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RequestStateBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StepStartBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for QosBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ProgressBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TocBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ResetTimeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StreamStartBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for NeedContextBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for HaveContextBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DeviceAddedBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for DeviceRemovedBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MessageView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Structure","synthetic":true,"types":[]},{"text":"impl Unpin for StructureRef","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for FieldIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl&lt;'name&gt; Unpin for GetError&lt;'name&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Caps","synthetic":true,"types":[]},{"text":"impl Unpin for CapsRef","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IterFeatures&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IterFeaturesMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Builder&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for BuilderFull&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for NoFeature","synthetic":true,"types":[]},{"text":"impl Unpin for HasFeatures","synthetic":true,"types":[]},{"text":"impl Unpin for AnyFeatures","synthetic":true,"types":[]},{"text":"impl Unpin for SomeFeatures","synthetic":true,"types":[]},{"text":"impl Unpin for TagList","synthetic":true,"types":[]},{"text":"impl Unpin for TagListRef","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for TagIter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for GenericTagIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for GenericIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Title","synthetic":true,"types":[]},{"text":"impl Unpin for TitleSortname","synthetic":true,"types":[]},{"text":"impl Unpin for Artist","synthetic":true,"types":[]},{"text":"impl Unpin for ArtistSortname","synthetic":true,"types":[]},{"text":"impl Unpin for Album","synthetic":true,"types":[]},{"text":"impl Unpin for AlbumSortname","synthetic":true,"types":[]},{"text":"impl Unpin for AlbumArtist","synthetic":true,"types":[]},{"text":"impl Unpin for AlbumArtistSortname","synthetic":true,"types":[]},{"text":"impl Unpin for Date","synthetic":true,"types":[]},{"text":"impl Unpin for DateTime","synthetic":true,"types":[]},{"text":"impl Unpin for Genre","synthetic":true,"types":[]},{"text":"impl Unpin for Comment","synthetic":true,"types":[]},{"text":"impl Unpin for ExtendedComment","synthetic":true,"types":[]},{"text":"impl Unpin for TrackNumber","synthetic":true,"types":[]},{"text":"impl Unpin for TrackCount","synthetic":true,"types":[]},{"text":"impl Unpin for AlbumVolumeNumber","synthetic":true,"types":[]},{"text":"impl Unpin for AlbumVolumeCount","synthetic":true,"types":[]},{"text":"impl Unpin for Location","synthetic":true,"types":[]},{"text":"impl Unpin for Homepage","synthetic":true,"types":[]},{"text":"impl Unpin for Description","synthetic":true,"types":[]},{"text":"impl Unpin for Version","synthetic":true,"types":[]},{"text":"impl Unpin for ISRC","synthetic":true,"types":[]},{"text":"impl Unpin for Organization","synthetic":true,"types":[]},{"text":"impl Unpin for Copyright","synthetic":true,"types":[]},{"text":"impl Unpin for CopyrightUri","synthetic":true,"types":[]},{"text":"impl Unpin for EncodedBy","synthetic":true,"types":[]},{"text":"impl Unpin for Composer","synthetic":true,"types":[]},{"text":"impl Unpin for Conductor","synthetic":true,"types":[]},{"text":"impl Unpin for Contact","synthetic":true,"types":[]},{"text":"impl Unpin for License","synthetic":true,"types":[]},{"text":"impl Unpin for LicenseUri","synthetic":true,"types":[]},{"text":"impl Unpin for Performer","synthetic":true,"types":[]},{"text":"impl Unpin for Duration","synthetic":true,"types":[]},{"text":"impl Unpin for Codec","synthetic":true,"types":[]},{"text":"impl Unpin for VideoCodec","synthetic":true,"types":[]},{"text":"impl Unpin for AudioCodec","synthetic":true,"types":[]},{"text":"impl Unpin for SubtitleCodec","synthetic":true,"types":[]},{"text":"impl Unpin for ContainerFormat","synthetic":true,"types":[]},{"text":"impl Unpin for Bitrate","synthetic":true,"types":[]},{"text":"impl Unpin for NominalBitrate","synthetic":true,"types":[]},{"text":"impl Unpin for MinimumBitrate","synthetic":true,"types":[]},{"text":"impl Unpin for MaximumBitrate","synthetic":true,"types":[]},{"text":"impl Unpin for Serial","synthetic":true,"types":[]},{"text":"impl Unpin for Encoder","synthetic":true,"types":[]},{"text":"impl Unpin for EncoderVersion","synthetic":true,"types":[]},{"text":"impl Unpin for TrackGain","synthetic":true,"types":[]},{"text":"impl Unpin for TrackPeak","synthetic":true,"types":[]},{"text":"impl Unpin for AlbumGain","synthetic":true,"types":[]},{"text":"impl Unpin for AlbumPeak","synthetic":true,"types":[]},{"text":"impl Unpin for ReferenceLevel","synthetic":true,"types":[]},{"text":"impl Unpin for LanguageCode","synthetic":true,"types":[]},{"text":"impl Unpin for LanguageName","synthetic":true,"types":[]},{"text":"impl Unpin for Image","synthetic":true,"types":[]},{"text":"impl Unpin for PreviewImage","synthetic":true,"types":[]},{"text":"impl Unpin for Attachment","synthetic":true,"types":[]},{"text":"impl Unpin for BeatsPerMinute","synthetic":true,"types":[]},{"text":"impl Unpin for Keywords","synthetic":true,"types":[]},{"text":"impl Unpin for GeoLocationName","synthetic":true,"types":[]},{"text":"impl Unpin for GeoLocationLatitude","synthetic":true,"types":[]},{"text":"impl Unpin for GeoLocationLongitute","synthetic":true,"types":[]},{"text":"impl Unpin for GeoLocationElevation","synthetic":true,"types":[]},{"text":"impl Unpin for GeoLocationCity","synthetic":true,"types":[]},{"text":"impl Unpin for GeoLocationCountry","synthetic":true,"types":[]},{"text":"impl Unpin for GeoLocationSublocation","synthetic":true,"types":[]},{"text":"impl Unpin for GeoLocationHorizontalError","synthetic":true,"types":[]},{"text":"impl Unpin for GeoLocationMovementDirection","synthetic":true,"types":[]},{"text":"impl Unpin for GeoLocationMovementSpeed","synthetic":true,"types":[]},{"text":"impl Unpin for GeoLocationCaptureDirection","synthetic":true,"types":[]},{"text":"impl Unpin for ShowName","synthetic":true,"types":[]},{"text":"impl Unpin for ShowSortname","synthetic":true,"types":[]},{"text":"impl Unpin for ShowEpisodeNumber","synthetic":true,"types":[]},{"text":"impl Unpin for ShowSeasonNumber","synthetic":true,"types":[]},{"text":"impl Unpin for Lyrics","synthetic":true,"types":[]},{"text":"impl Unpin for ComposerSortname","synthetic":true,"types":[]},{"text":"impl Unpin for Grouping","synthetic":true,"types":[]},{"text":"impl Unpin for UserRating","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceManufacturer","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceModel","synthetic":true,"types":[]},{"text":"impl Unpin for ApplicationName","synthetic":true,"types":[]},{"text":"impl Unpin for ApplicationData","synthetic":true,"types":[]},{"text":"impl Unpin for ImageOrientation","synthetic":true,"types":[]},{"text":"impl Unpin for Publisher","synthetic":true,"types":[]},{"text":"impl Unpin for InterpretedBy","synthetic":true,"types":[]},{"text":"impl Unpin for MidiBaseNote","synthetic":true,"types":[]},{"text":"impl Unpin for PrivateData","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for MetaRef&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, U&gt; Unpin for MetaRefMut&lt;'a, T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Meta","synthetic":true,"types":[]},{"text":"impl Unpin for ParentBufferMeta","synthetic":true,"types":[]},{"text":"impl Unpin for ProtectionMeta","synthetic":true,"types":[]},{"text":"impl Unpin for Standalone","synthetic":true,"types":[]},{"text":"impl Unpin for Iterated","synthetic":true,"types":[]},{"text":"impl Unpin for Buffer","synthetic":true,"types":[]},{"text":"impl Unpin for BufferRef","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for BufferMap&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for MappedBuffer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for MetaIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for MetaIterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IterOwned&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Readable","synthetic":true,"types":[]},{"text":"impl Unpin for Writable","synthetic":true,"types":[]},{"text":"impl Unpin for Memory","synthetic":true,"types":[]},{"text":"impl Unpin for MemoryRef","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for MemoryMap&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for MappedMemory&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Dump&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Readable","synthetic":true,"types":[]},{"text":"impl Unpin for Writable","synthetic":true,"types":[]},{"text":"impl Unpin for Sample","synthetic":true,"types":[]},{"text":"impl Unpin for SampleRef","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SampleBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for BufferList","synthetic":true,"types":[]},{"text":"impl Unpin for BufferListRef","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IterOwned&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Query","synthetic":true,"types":[]},{"text":"impl Unpin for QueryRef","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Position&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Duration&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Latency&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Seeking&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Segment&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Convert&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Formats&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Buffering&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Custom&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Uri&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Allocation&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Scheduling&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AcceptCaps&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Caps&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Drain&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Context&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Bitrate&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Other&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for QueryView&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Seqnum","synthetic":true,"types":[]},{"text":"impl Unpin for GroupId","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for EventRef","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for FlushStart&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for FlushStop&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StreamStart&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Caps&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Segment&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StreamCollection&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Tag&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for BufferSize&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SinkMessage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StreamGroupDone&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Eos&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Toc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Protection&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SegmentDone&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Gap&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Qos&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Seek&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Navigation&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Latency&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Step&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Reconfigure&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TocSelect&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SelectStreams&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CustomUpstream&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CustomDownstream&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CustomDownstreamOob&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CustomDownstreamSticky&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CustomBoth&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CustomBothOob&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for FlushStartBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for FlushStopBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StreamStartBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CapsBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SegmentBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TagBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for BufferSizeBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SinkMessageBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for EosBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TocBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ProtectionBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SegmentDoneBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for GapBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for QosBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SeekBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for NavigationBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for LatencyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StepBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ReconfigureBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TocSelectBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CustomUpstreamBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CustomDownstreamBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CustomDownstreamOobBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CustomDownstreamStickyBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CustomBothBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CustomBothOobBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for EventView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Context","synthetic":true,"types":[]},{"text":"impl Unpin for ContextRef","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for BusStream","synthetic":true,"types":[]},{"text":"impl Unpin for Undefined","synthetic":true,"types":[]},{"text":"impl Unpin for Default","synthetic":true,"types":[]},{"text":"impl Unpin for Bytes","synthetic":true,"types":[]},{"text":"impl Unpin for Buffers","synthetic":true,"types":[]},{"text":"impl Unpin for Percent","synthetic":true,"types":[]},{"text":"impl Unpin for TryFromGenericFormattedValueError","synthetic":true,"types":[]},{"text":"impl Unpin for TryPercentFromFloatError","synthetic":true,"types":[]},{"text":"impl Unpin for GenericFormattedValue","synthetic":true,"types":[]},{"text":"impl Unpin for Toc","synthetic":true,"types":[]},{"text":"impl Unpin for TocRef","synthetic":true,"types":[]},{"text":"impl Unpin for TocEntry","synthetic":true,"types":[]},{"text":"impl Unpin for TocEntryRef","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ElementInstanceStruct&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as ObjectSubclass&gt;::ParentType as ObjectType&gt;::GlibType: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FlowError","synthetic":true,"types":[]}];
implementors["gstreamer_sys"] = [{"text":"impl Unpin for GstAllocationParams","synthetic":true,"types":[]},{"text":"impl Unpin for GstAllocatorClass","synthetic":true,"types":[]},{"text":"impl Unpin for _GstAllocatorPrivate","synthetic":true,"types":[]},{"text":"impl Unpin for GstAtomicQueue","synthetic":true,"types":[]},{"text":"impl Unpin for GstBinClass","synthetic":true,"types":[]},{"text":"impl Unpin for _GstBinPrivate","synthetic":true,"types":[]},{"text":"impl Unpin for GstBuffer","synthetic":true,"types":[]},{"text":"impl Unpin for GstBufferList","synthetic":true,"types":[]},{"text":"impl Unpin for GstBufferPoolAcquireParams","synthetic":true,"types":[]},{"text":"impl Unpin for GstBufferPoolClass","synthetic":true,"types":[]},{"text":"impl Unpin for _GstBufferPoolPrivate","synthetic":true,"types":[]},{"text":"impl Unpin for GstBusClass","synthetic":true,"types":[]},{"text":"impl Unpin for _GstBusPrivate","synthetic":true,"types":[]},{"text":"impl Unpin for GstCaps","synthetic":true,"types":[]},{"text":"impl Unpin for GstCapsFeatures","synthetic":true,"types":[]},{"text":"impl Unpin for GstChildProxyInterface","synthetic":true,"types":[]},{"text":"impl Unpin for GstClockClass","synthetic":true,"types":[]},{"text":"impl Unpin for GstClockEntry","synthetic":true,"types":[]},{"text":"impl Unpin for _GstClockPrivate","synthetic":true,"types":[]},{"text":"impl Unpin for GstContext","synthetic":true,"types":[]},{"text":"impl Unpin for GstControlBindingClass","synthetic":true,"types":[]},{"text":"impl Unpin for _GstControlBindingPrivate","synthetic":true,"types":[]},{"text":"impl Unpin for GstControlBinding_ABI_abi","synthetic":true,"types":[]},{"text":"impl Unpin for GstControlSourceClass","synthetic":true,"types":[]},{"text":"impl Unpin for GstDateTime","synthetic":true,"types":[]},{"text":"impl Unpin for GstDebugCategory","synthetic":true,"types":[]},{"text":"impl Unpin for _GstDebugMessage","synthetic":true,"types":[]},{"text":"impl Unpin for GstDeviceClass","synthetic":true,"types":[]},{"text":"impl Unpin for GstDeviceMonitorClass","synthetic":true,"types":[]},{"text":"impl Unpin for _GstDeviceMonitorPrivate","synthetic":true,"types":[]},{"text":"impl Unpin for _GstDevicePrivate","synthetic":true,"types":[]},{"text":"impl Unpin for GstDeviceProviderClass","synthetic":true,"types":[]},{"text":"impl Unpin for _GstDeviceProviderFactoryClass","synthetic":true,"types":[]},{"text":"impl Unpin for _GstDeviceProviderPrivate","synthetic":true,"types":[]},{"text":"impl Unpin for _GstDynamicTypeFactoryClass","synthetic":true,"types":[]},{"text":"impl Unpin for GstElementClass","synthetic":true,"types":[]},{"text":"impl Unpin for _GstElementFactoryClass","synthetic":true,"types":[]},{"text":"impl Unpin for GstEvent","synthetic":true,"types":[]},{"text":"impl Unpin for GstFormatDefinition","synthetic":true,"types":[]},{"text":"impl Unpin for GstGhostPadClass","synthetic":true,"types":[]},{"text":"impl Unpin for _GstGhostPadPrivate","synthetic":true,"types":[]},{"text":"impl Unpin for GstIterator","synthetic":true,"types":[]},{"text":"impl Unpin for GstMapInfo","synthetic":true,"types":[]},{"text":"impl Unpin for GstMemory","synthetic":true,"types":[]},{"text":"impl Unpin for GstMessage","synthetic":true,"types":[]},{"text":"impl Unpin for GstMeta","synthetic":true,"types":[]},{"text":"impl Unpin for GstMetaInfo","synthetic":true,"types":[]},{"text":"impl Unpin for GstMetaTransformCopy","synthetic":true,"types":[]},{"text":"impl Unpin for GstMiniObject","synthetic":true,"types":[]},{"text":"impl Unpin for GstObjectClass","synthetic":true,"types":[]},{"text":"impl Unpin for GstPadClass","synthetic":true,"types":[]},{"text":"impl Unpin for _GstPadPrivate","synthetic":true,"types":[]},{"text":"impl Unpin for GstPadProbeInfo","synthetic":true,"types":[]},{"text":"impl Unpin for GstPadProbeInfo_ABI_abi","synthetic":true,"types":[]},{"text":"impl Unpin for GstPadTemplateClass","synthetic":true,"types":[]},{"text":"impl Unpin for GstPadTemplate_ABI_abi","synthetic":true,"types":[]},{"text":"impl Unpin for GstPad_ABI_abi","synthetic":true,"types":[]},{"text":"impl Unpin for GstParamSpecArray","synthetic":true,"types":[]},{"text":"impl Unpin for GstParamSpecFraction","synthetic":true,"types":[]},{"text":"impl Unpin for GstParentBufferMeta","synthetic":true,"types":[]},{"text":"impl Unpin for GstParseContext","synthetic":true,"types":[]},{"text":"impl Unpin for GstPipelineClass","synthetic":true,"types":[]},{"text":"impl Unpin for _GstPipelinePrivate","synthetic":true,"types":[]},{"text":"impl Unpin for _GstPluginClass","synthetic":true,"types":[]},{"text":"impl Unpin for GstPluginDesc","synthetic":true,"types":[]},{"text":"impl Unpin for _GstPluginFeatureClass","synthetic":true,"types":[]},{"text":"impl Unpin for _GstPoll","synthetic":true,"types":[]},{"text":"impl Unpin for GstPollFD","synthetic":true,"types":[]},{"text":"impl Unpin for GstPresetInterface","synthetic":true,"types":[]},{"text":"impl Unpin for GstPromise","synthetic":true,"types":[]},{"text":"impl Unpin for GstProtectionMeta","synthetic":true,"types":[]},{"text":"impl Unpin for GstProxyPadClass","synthetic":true,"types":[]},{"text":"impl Unpin for _GstProxyPadPrivate","synthetic":true,"types":[]},{"text":"impl Unpin for GstQuery","synthetic":true,"types":[]},{"text":"impl Unpin for GstReferenceTimestampMeta","synthetic":true,"types":[]},{"text":"impl Unpin for GstRegistryClass","synthetic":true,"types":[]},{"text":"impl Unpin for _GstRegistryPrivate","synthetic":true,"types":[]},{"text":"impl Unpin for GstSample","synthetic":true,"types":[]},{"text":"impl Unpin for GstSegment","synthetic":true,"types":[]},{"text":"impl Unpin for GstStaticCaps","synthetic":true,"types":[]},{"text":"impl Unpin for GstStaticPadTemplate","synthetic":true,"types":[]},{"text":"impl Unpin for GstStreamClass","synthetic":true,"types":[]},{"text":"impl Unpin for GstStreamCollectionClass","synthetic":true,"types":[]},{"text":"impl Unpin for _GstStreamCollectionPrivate","synthetic":true,"types":[]},{"text":"impl Unpin for _GstStreamPrivate","synthetic":true,"types":[]},{"text":"impl Unpin for GstStructure","synthetic":true,"types":[]},{"text":"impl Unpin for GstSystemClockClass","synthetic":true,"types":[]},{"text":"impl Unpin for _GstSystemClockPrivate","synthetic":true,"types":[]},{"text":"impl Unpin for GstTagList","synthetic":true,"types":[]},{"text":"impl Unpin for GstTagSetterInterface","synthetic":true,"types":[]},{"text":"impl Unpin for GstTaskClass","synthetic":true,"types":[]},{"text":"impl Unpin for GstTaskPoolClass","synthetic":true,"types":[]},{"text":"impl Unpin for _GstTaskPrivate","synthetic":true,"types":[]},{"text":"impl Unpin for GstTimedValue","synthetic":true,"types":[]},{"text":"impl Unpin for GstToc","synthetic":true,"types":[]},{"text":"impl Unpin for GstTocEntry","synthetic":true,"types":[]},{"text":"impl Unpin for GstTocSetterInterface","synthetic":true,"types":[]},{"text":"impl Unpin for GstTracerClass","synthetic":true,"types":[]},{"text":"impl Unpin for _GstTracerFactoryClass","synthetic":true,"types":[]},{"text":"impl Unpin for _GstTracerPrivate","synthetic":true,"types":[]},{"text":"impl Unpin for _GstTracerRecordClass","synthetic":true,"types":[]},{"text":"impl Unpin for GstTypeFind","synthetic":true,"types":[]},{"text":"impl Unpin for _GstTypeFindFactoryClass","synthetic":true,"types":[]},{"text":"impl Unpin for GstURIHandlerInterface","synthetic":true,"types":[]},{"text":"impl Unpin for GstUri","synthetic":true,"types":[]},{"text":"impl Unpin for GstValueTable","synthetic":true,"types":[]},{"text":"impl Unpin for GstAllocator","synthetic":true,"types":[]},{"text":"impl Unpin for GstBin","synthetic":true,"types":[]},{"text":"impl Unpin for GstBitmask","synthetic":true,"types":[]},{"text":"impl Unpin for GstBufferPool","synthetic":true,"types":[]},{"text":"impl Unpin for GstBus","synthetic":true,"types":[]},{"text":"impl Unpin for GstClock","synthetic":true,"types":[]},{"text":"impl Unpin for GstControlBinding","synthetic":true,"types":[]},{"text":"impl Unpin for GstControlSource","synthetic":true,"types":[]},{"text":"impl Unpin for GstDevice","synthetic":true,"types":[]},{"text":"impl Unpin for GstDeviceMonitor","synthetic":true,"types":[]},{"text":"impl Unpin for GstDeviceProvider","synthetic":true,"types":[]},{"text":"impl Unpin for GstDeviceProviderFactory","synthetic":true,"types":[]},{"text":"impl Unpin for GstDoubleRange","synthetic":true,"types":[]},{"text":"impl Unpin for GstDynamicTypeFactory","synthetic":true,"types":[]},{"text":"impl Unpin for GstElement","synthetic":true,"types":[]},{"text":"impl Unpin for GstElementFactory","synthetic":true,"types":[]},{"text":"impl Unpin for GstFlagSet","synthetic":true,"types":[]},{"text":"impl Unpin for GstFraction","synthetic":true,"types":[]},{"text":"impl Unpin for GstFractionRange","synthetic":true,"types":[]},{"text":"impl Unpin for GstGhostPad","synthetic":true,"types":[]},{"text":"impl Unpin for GstInt64Range","synthetic":true,"types":[]},{"text":"impl Unpin for GstIntRange","synthetic":true,"types":[]},{"text":"impl Unpin for GstObject","synthetic":true,"types":[]},{"text":"impl Unpin for GstPad","synthetic":true,"types":[]},{"text":"impl Unpin for GstPadTemplate","synthetic":true,"types":[]},{"text":"impl Unpin for GstParamArray","synthetic":true,"types":[]},{"text":"impl Unpin for GstParamFraction","synthetic":true,"types":[]},{"text":"impl Unpin for GstPipeline","synthetic":true,"types":[]},{"text":"impl Unpin for GstPlugin","synthetic":true,"types":[]},{"text":"impl Unpin for GstPluginFeature","synthetic":true,"types":[]},{"text":"impl Unpin for GstProxyPad","synthetic":true,"types":[]},{"text":"impl Unpin for GstRegistry","synthetic":true,"types":[]},{"text":"impl Unpin for GstStream","synthetic":true,"types":[]},{"text":"impl Unpin for GstStreamCollection","synthetic":true,"types":[]},{"text":"impl Unpin for GstSystemClock","synthetic":true,"types":[]},{"text":"impl Unpin for GstTask","synthetic":true,"types":[]},{"text":"impl Unpin for GstTaskPool","synthetic":true,"types":[]},{"text":"impl Unpin for GstTracer","synthetic":true,"types":[]},{"text":"impl Unpin for GstTracerFactory","synthetic":true,"types":[]},{"text":"impl Unpin for GstTracerRecord","synthetic":true,"types":[]},{"text":"impl Unpin for GstTypeFindFactory","synthetic":true,"types":[]},{"text":"impl Unpin for GstValueArray","synthetic":true,"types":[]},{"text":"impl Unpin for GstValueList","synthetic":true,"types":[]},{"text":"impl Unpin for GstChildProxy","synthetic":true,"types":[]},{"text":"impl Unpin for GstPreset","synthetic":true,"types":[]},{"text":"impl Unpin for GstTagSetter","synthetic":true,"types":[]},{"text":"impl Unpin for GstTocSetter","synthetic":true,"types":[]},{"text":"impl Unpin for GstURIHandler","synthetic":true,"types":[]},{"text":"impl Unpin for GstControlBinding_ABI","synthetic":true,"types":[]},{"text":"impl Unpin for GstPadProbeInfo_ABI","synthetic":true,"types":[]},{"text":"impl Unpin for GstPadTemplate_ABI","synthetic":true,"types":[]},{"text":"impl Unpin for GstPad_ABI","synthetic":true,"types":[]}];
implementors["itertools"] = [{"text":"impl&lt;I, J&gt; Unpin for Diff&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for MinMaxResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Position&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, B&gt; Unpin for EitherOrBoth&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FoldWhile&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, Pred&gt; Unpin for DedupBy&lt;I, Pred&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Pred: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Unpin for Interleave&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Unpin for InterleaveShortest&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Unpin for Product&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for PutBack&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for Batching&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, R&gt; Unpin for MapInto&lt;I, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for MapResults&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J, F&gt; Unpin for MergeBy&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; Unpin for TakeWhileRef&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for WhileSome&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for Coalesce&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Unpin for TupleCombinations&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as HasCombination&lt;I&gt;&gt;::Combination: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for Positions&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for Update&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Step&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for MultiProduct&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Combinations&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for CombinationsWithReplacement&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Unpin for ConsTuples&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for ExactlyOneError&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Unpin for Format&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; Unpin for FormatWith&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for IntoChunks&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Unpin for Chunk&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Unpin for Chunks&lt;'a, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, I, F&gt; Unpin for GroupBy&lt;K, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, I, F&gt; Unpin for Group&lt;'a, K, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, I, F&gt; Unpin for Groups&lt;'a, K, I, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Intersperse&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for KMergeBy&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J, F&gt; Unpin for MergeJoinBy&lt;I, J, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;J as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for MultiPeek&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, F&gt; Unpin for PadUsing&lt;I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, F&gt; Unpin for PeekingTakeWhile&lt;'a, I, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Permutations&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, E&gt; Unpin for ProcessResults&lt;'a, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for PutBackN&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for RcIter&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for RepeatN&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Unpin for RepeatCall&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Unpin for Unfold&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;St, F&gt; Unpin for Iterate&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Tee&lt;I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for TupleBuffer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Unpin for TupleWindows&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, T&gt; Unpin for Tuples&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TupleCollect&gt;::Buffer: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Unique&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, V, F&gt; Unpin for UniqueBy&lt;I, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for WithPosition&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, J&gt; Unpin for ZipEq&lt;I, J&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;J: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for ZipLongest&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Zip&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["libc"] = [{"text":"impl Unpin for group","synthetic":true,"types":[]},{"text":"impl Unpin for utimbuf","synthetic":true,"types":[]},{"text":"impl Unpin for timeval","synthetic":true,"types":[]},{"text":"impl Unpin for timespec","synthetic":true,"types":[]},{"text":"impl Unpin for rlimit","synthetic":true,"types":[]},{"text":"impl Unpin for rusage","synthetic":true,"types":[]},{"text":"impl Unpin for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for hostent","synthetic":true,"types":[]},{"text":"impl Unpin for iovec","synthetic":true,"types":[]},{"text":"impl Unpin for pollfd","synthetic":true,"types":[]},{"text":"impl Unpin for winsize","synthetic":true,"types":[]},{"text":"impl Unpin for linger","synthetic":true,"types":[]},{"text":"impl Unpin for sigval","synthetic":true,"types":[]},{"text":"impl Unpin for itimerval","synthetic":true,"types":[]},{"text":"impl Unpin for tms","synthetic":true,"types":[]},{"text":"impl Unpin for servent","synthetic":true,"types":[]},{"text":"impl Unpin for protoent","synthetic":true,"types":[]},{"text":"impl Unpin for in_addr","synthetic":true,"types":[]},{"text":"impl Unpin for ip_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for ip_mreq_source","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl Unpin for addrinfo","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_ll","synthetic":true,"types":[]},{"text":"impl Unpin for fd_set","synthetic":true,"types":[]},{"text":"impl Unpin for tm","synthetic":true,"types":[]},{"text":"impl Unpin for sched_param","synthetic":true,"types":[]},{"text":"impl Unpin for Dl_info","synthetic":true,"types":[]},{"text":"impl Unpin for lconv","synthetic":true,"types":[]},{"text":"impl Unpin for in_pktinfo","synthetic":true,"types":[]},{"text":"impl Unpin for ifaddrs","synthetic":true,"types":[]},{"text":"impl Unpin for in6_rtmsg","synthetic":true,"types":[]},{"text":"impl Unpin for arpreq","synthetic":true,"types":[]},{"text":"impl Unpin for arpreq_old","synthetic":true,"types":[]},{"text":"impl Unpin for arphdr","synthetic":true,"types":[]},{"text":"impl Unpin for mmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for epoll_event","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Unpin for utsname","synthetic":true,"types":[]},{"text":"impl Unpin for sigevent","synthetic":true,"types":[]},{"text":"impl Unpin for rlimit64","synthetic":true,"types":[]},{"text":"impl Unpin for glob_t","synthetic":true,"types":[]},{"text":"impl Unpin for passwd","synthetic":true,"types":[]},{"text":"impl Unpin for spwd","synthetic":true,"types":[]},{"text":"impl Unpin for dqblk","synthetic":true,"types":[]},{"text":"impl Unpin for signalfd_siginfo","synthetic":true,"types":[]},{"text":"impl Unpin for itimerspec","synthetic":true,"types":[]},{"text":"impl Unpin for fsid_t","synthetic":true,"types":[]},{"text":"impl Unpin for packet_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for cpu_set_t","synthetic":true,"types":[]},{"text":"impl Unpin for if_nameindex","synthetic":true,"types":[]},{"text":"impl Unpin for msginfo","synthetic":true,"types":[]},{"text":"impl Unpin for sembuf","synthetic":true,"types":[]},{"text":"impl Unpin for input_event","synthetic":true,"types":[]},{"text":"impl Unpin for input_id","synthetic":true,"types":[]},{"text":"impl Unpin for input_absinfo","synthetic":true,"types":[]},{"text":"impl Unpin for input_keymap_entry","synthetic":true,"types":[]},{"text":"impl Unpin for input_mask","synthetic":true,"types":[]},{"text":"impl Unpin for ff_replay","synthetic":true,"types":[]},{"text":"impl Unpin for ff_trigger","synthetic":true,"types":[]},{"text":"impl Unpin for ff_envelope","synthetic":true,"types":[]},{"text":"impl Unpin for ff_constant_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_ramp_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_condition_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_periodic_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_rumble_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_effect","synthetic":true,"types":[]},{"text":"impl Unpin for dl_phdr_info","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Ehdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Ehdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Sym","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Sym","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Phdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Phdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Shdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Shdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Chdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Chdr","synthetic":true,"types":[]},{"text":"impl Unpin for ucred","synthetic":true,"types":[]},{"text":"impl Unpin for mntent","synthetic":true,"types":[]},{"text":"impl Unpin for posix_spawn_file_actions_t","synthetic":true,"types":[]},{"text":"impl Unpin for posix_spawnattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for genlmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for in6_pktinfo","synthetic":true,"types":[]},{"text":"impl Unpin for arpd_request","synthetic":true,"types":[]},{"text":"impl Unpin for inotify_event","synthetic":true,"types":[]},{"text":"impl Unpin for fanotify_response","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_vm","synthetic":true,"types":[]},{"text":"impl Unpin for regmatch_t","synthetic":true,"types":[]},{"text":"impl Unpin for sock_extended_err","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_nl","synthetic":true,"types":[]},{"text":"impl Unpin for dirent","synthetic":true,"types":[]},{"text":"impl Unpin for dirent64","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_alg","synthetic":true,"types":[]},{"text":"impl Unpin for af_alg_iv","synthetic":true,"types":[]},{"text":"impl Unpin for mq_attr","synthetic":true,"types":[]},{"text":"impl Unpin for statx","synthetic":true,"types":[]},{"text":"impl Unpin for statx_timestamp","synthetic":true,"types":[]},{"text":"impl Unpin for aiocb","synthetic":true,"types":[]},{"text":"impl Unpin for __exit_status","synthetic":true,"types":[]},{"text":"impl Unpin for __timeval","synthetic":true,"types":[]},{"text":"impl Unpin for glob64_t","synthetic":true,"types":[]},{"text":"impl Unpin for msghdr","synthetic":true,"types":[]},{"text":"impl Unpin for cmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for termios","synthetic":true,"types":[]},{"text":"impl Unpin for mallinfo","synthetic":true,"types":[]},{"text":"impl Unpin for nlmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for nlmsgerr","synthetic":true,"types":[]},{"text":"impl Unpin for nl_pktinfo","synthetic":true,"types":[]},{"text":"impl Unpin for nl_mmap_req","synthetic":true,"types":[]},{"text":"impl Unpin for nl_mmap_hdr","synthetic":true,"types":[]},{"text":"impl Unpin for nlattr","synthetic":true,"types":[]},{"text":"impl Unpin for rtentry","synthetic":true,"types":[]},{"text":"impl Unpin for timex","synthetic":true,"types":[]},{"text":"impl Unpin for ntptimeval","synthetic":true,"types":[]},{"text":"impl Unpin for regex_t","synthetic":true,"types":[]},{"text":"impl Unpin for utmpx","synthetic":true,"types":[]},{"text":"impl Unpin for sigset_t","synthetic":true,"types":[]},{"text":"impl Unpin for sysinfo","synthetic":true,"types":[]},{"text":"impl Unpin for msqid_ds","synthetic":true,"types":[]},{"text":"impl Unpin for sigaction","synthetic":true,"types":[]},{"text":"impl Unpin for statfs","synthetic":true,"types":[]},{"text":"impl Unpin for flock","synthetic":true,"types":[]},{"text":"impl Unpin for flock64","synthetic":true,"types":[]},{"text":"impl Unpin for siginfo_t","synthetic":true,"types":[]},{"text":"impl Unpin for stack_t","synthetic":true,"types":[]},{"text":"impl Unpin for stat","synthetic":true,"types":[]},{"text":"impl Unpin for stat64","synthetic":true,"types":[]},{"text":"impl Unpin for statfs64","synthetic":true,"types":[]},{"text":"impl Unpin for statvfs64","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl Unpin for _libc_fpxreg","synthetic":true,"types":[]},{"text":"impl Unpin for _libc_xmmreg","synthetic":true,"types":[]},{"text":"impl Unpin for _libc_fpstate","synthetic":true,"types":[]},{"text":"impl Unpin for user_regs_struct","synthetic":true,"types":[]},{"text":"impl Unpin for user","synthetic":true,"types":[]},{"text":"impl Unpin for mcontext_t","synthetic":true,"types":[]},{"text":"impl Unpin for ipc_perm","synthetic":true,"types":[]},{"text":"impl Unpin for shmid_ds","synthetic":true,"types":[]},{"text":"impl Unpin for termios2","synthetic":true,"types":[]},{"text":"impl Unpin for ip_mreqn","synthetic":true,"types":[]},{"text":"impl Unpin for user_fpregs_struct","synthetic":true,"types":[]},{"text":"impl Unpin for ucontext_t","synthetic":true,"types":[]},{"text":"impl Unpin for statvfs","synthetic":true,"types":[]},{"text":"impl Unpin for max_align_t","synthetic":true,"types":[]},{"text":"impl Unpin for sem_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for fanotify_event_metadata","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Unpin for in6_addr","synthetic":true,"types":[]},{"text":"impl Unpin for DIR","synthetic":true,"types":[]},{"text":"impl Unpin for FILE","synthetic":true,"types":[]},{"text":"impl Unpin for fpos_t","synthetic":true,"types":[]},{"text":"impl Unpin for timezone","synthetic":true,"types":[]},{"text":"impl Unpin for fpos64_t","synthetic":true,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Unpin for ExtendedGcd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IterBinomial&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T&gt; Unpin for Ratio&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ParseRatioError","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl Unpin for ParseFloatError","synthetic":true,"types":[]},{"text":"impl Unpin for FloatErrorKind","synthetic":true,"types":[]}];
implementors["once_cell"] = [{"text":"impl&lt;T&gt; Unpin for OnceCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F&gt; Unpin for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for OnceCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, F&gt; Unpin for Lazy&lt;T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["pai_gst_sequencer"] = [{"text":"impl Unpin for PAISequencer","synthetic":true,"types":[]},{"text":"impl Unpin for PAISequencerState","synthetic":true,"types":[]}];
implementors["pretty_hex"] = [{"text":"impl Unpin for HexConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Hex&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Unpin for TokenStream","synthetic":true,"types":[]},{"text":"impl Unpin for LexError","synthetic":true,"types":[]},{"text":"impl Unpin for Span","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for Punct","synthetic":true,"types":[]},{"text":"impl Unpin for Ident","synthetic":true,"types":[]},{"text":"impl Unpin for Literal","synthetic":true,"types":[]},{"text":"impl Unpin for TokenTree","synthetic":true,"types":[]},{"text":"impl Unpin for Delimiter","synthetic":true,"types":[]},{"text":"impl Unpin for Spacing","synthetic":true,"types":[]},{"text":"impl Unpin for IntoIter","synthetic":true,"types":[]}];
implementors["proc_macro_error"] = [{"text":"impl Unpin for Diagnostic","synthetic":true,"types":[]},{"text":"impl Unpin for SpanRange","synthetic":true,"types":[]},{"text":"impl Unpin for Level","synthetic":true,"types":[]}];
implementors["serde"] = [{"text":"impl Unpin for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for UnitDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for BoolDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for IsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for UsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for F32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for F64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for CharDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Unpin for StrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Unpin for BorrowedStrDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for StringDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Unpin for CowStrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Unpin for BorrowedBytesDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Unpin for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; Unpin for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; Unpin for Impossible&lt;Ok, Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Error: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ok: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; Unpin for Slab&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for VacantEntry&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Drain&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["strsim"] = [{"text":"impl Unpin for StrSimError","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl Unpin for Attribute","synthetic":true,"types":[]},{"text":"impl Unpin for MetaList","synthetic":true,"types":[]},{"text":"impl Unpin for MetaNameValue","synthetic":true,"types":[]},{"text":"impl Unpin for Field","synthetic":true,"types":[]},{"text":"impl Unpin for FieldsNamed","synthetic":true,"types":[]},{"text":"impl Unpin for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl Unpin for Variant","synthetic":true,"types":[]},{"text":"impl Unpin for VisCrate","synthetic":true,"types":[]},{"text":"impl Unpin for VisPublic","synthetic":true,"types":[]},{"text":"impl Unpin for VisRestricted","synthetic":true,"types":[]},{"text":"impl Unpin for Arm","synthetic":true,"types":[]},{"text":"impl Unpin for FieldValue","synthetic":true,"types":[]},{"text":"impl Unpin for Label","synthetic":true,"types":[]},{"text":"impl Unpin for MethodTurbofish","synthetic":true,"types":[]},{"text":"impl Unpin for ExprArray","synthetic":true,"types":[]},{"text":"impl Unpin for ExprAssign","synthetic":true,"types":[]},{"text":"impl Unpin for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl Unpin for ExprAsync","synthetic":true,"types":[]},{"text":"impl Unpin for ExprAwait","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBinary","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBlock","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBox","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBreak","synthetic":true,"types":[]},{"text":"impl Unpin for ExprCall","synthetic":true,"types":[]},{"text":"impl Unpin for ExprCast","synthetic":true,"types":[]},{"text":"impl Unpin for ExprClosure","synthetic":true,"types":[]},{"text":"impl Unpin for ExprContinue","synthetic":true,"types":[]},{"text":"impl Unpin for ExprField","synthetic":true,"types":[]},{"text":"impl Unpin for ExprForLoop","synthetic":true,"types":[]},{"text":"impl Unpin for ExprGroup","synthetic":true,"types":[]},{"text":"impl Unpin for ExprIf","synthetic":true,"types":[]},{"text":"impl Unpin for ExprIndex","synthetic":true,"types":[]},{"text":"impl Unpin for ExprLet","synthetic":true,"types":[]},{"text":"impl Unpin for ExprLit","synthetic":true,"types":[]},{"text":"impl Unpin for ExprLoop","synthetic":true,"types":[]},{"text":"impl Unpin for ExprMacro","synthetic":true,"types":[]},{"text":"impl Unpin for ExprMatch","synthetic":true,"types":[]},{"text":"impl Unpin for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl Unpin for ExprParen","synthetic":true,"types":[]},{"text":"impl Unpin for ExprPath","synthetic":true,"types":[]},{"text":"impl Unpin for ExprRange","synthetic":true,"types":[]},{"text":"impl Unpin for ExprReference","synthetic":true,"types":[]},{"text":"impl Unpin for ExprRepeat","synthetic":true,"types":[]},{"text":"impl Unpin for ExprReturn","synthetic":true,"types":[]},{"text":"impl Unpin for ExprStruct","synthetic":true,"types":[]},{"text":"impl Unpin for ExprTry","synthetic":true,"types":[]},{"text":"impl Unpin for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl Unpin for ExprTuple","synthetic":true,"types":[]},{"text":"impl Unpin for ExprType","synthetic":true,"types":[]},{"text":"impl Unpin for ExprUnary","synthetic":true,"types":[]},{"text":"impl Unpin for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl Unpin for ExprWhile","synthetic":true,"types":[]},{"text":"impl Unpin for ExprYield","synthetic":true,"types":[]},{"text":"impl Unpin for Index","synthetic":true,"types":[]},{"text":"impl Unpin for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl Unpin for ConstParam","synthetic":true,"types":[]},{"text":"impl Unpin for Generics","synthetic":true,"types":[]},{"text":"impl Unpin for LifetimeDef","synthetic":true,"types":[]},{"text":"impl Unpin for PredicateEq","synthetic":true,"types":[]},{"text":"impl Unpin for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl Unpin for PredicateType","synthetic":true,"types":[]},{"text":"impl Unpin for TraitBound","synthetic":true,"types":[]},{"text":"impl Unpin for TypeParam","synthetic":true,"types":[]},{"text":"impl Unpin for WhereClause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ForeignItemFn","synthetic":true,"types":[]},{"text":"impl Unpin for ForeignItemMacro","synthetic":true,"types":[]},{"text":"impl Unpin for ForeignItemStatic","synthetic":true,"types":[]},{"text":"impl Unpin for ForeignItemType","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItemConst","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItemMacro","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItemMethod","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItemType","synthetic":true,"types":[]},{"text":"impl Unpin for ItemConst","synthetic":true,"types":[]},{"text":"impl Unpin for ItemEnum","synthetic":true,"types":[]},{"text":"impl Unpin for ItemExternCrate","synthetic":true,"types":[]},{"text":"impl Unpin for ItemFn","synthetic":true,"types":[]},{"text":"impl Unpin for ItemForeignMod","synthetic":true,"types":[]},{"text":"impl Unpin for ItemImpl","synthetic":true,"types":[]},{"text":"impl Unpin for ItemMacro","synthetic":true,"types":[]},{"text":"impl Unpin for ItemMacro2","synthetic":true,"types":[]},{"text":"impl Unpin for ItemMod","synthetic":true,"types":[]},{"text":"impl Unpin for ItemStatic","synthetic":true,"types":[]},{"text":"impl Unpin for ItemStruct","synthetic":true,"types":[]},{"text":"impl Unpin for ItemTrait","synthetic":true,"types":[]},{"text":"impl Unpin for ItemTraitAlias","synthetic":true,"types":[]},{"text":"impl Unpin for ItemType","synthetic":true,"types":[]},{"text":"impl Unpin for ItemUnion","synthetic":true,"types":[]},{"text":"impl Unpin for ItemUse","synthetic":true,"types":[]},{"text":"impl Unpin for Receiver","synthetic":true,"types":[]},{"text":"impl Unpin for Signature","synthetic":true,"types":[]},{"text":"impl Unpin for TraitItemConst","synthetic":true,"types":[]},{"text":"impl Unpin for TraitItemMacro","synthetic":true,"types":[]},{"text":"impl Unpin for TraitItemMethod","synthetic":true,"types":[]},{"text":"impl Unpin for TraitItemType","synthetic":true,"types":[]},{"text":"impl Unpin for UseGlob","synthetic":true,"types":[]},{"text":"impl Unpin for UseGroup","synthetic":true,"types":[]},{"text":"impl Unpin for UseName","synthetic":true,"types":[]},{"text":"impl Unpin for UsePath","synthetic":true,"types":[]},{"text":"impl Unpin for UseRename","synthetic":true,"types":[]},{"text":"impl Unpin for File","synthetic":true,"types":[]},{"text":"impl Unpin for Lifetime","synthetic":true,"types":[]},{"text":"impl Unpin for LitBool","synthetic":true,"types":[]},{"text":"impl Unpin for LitByte","synthetic":true,"types":[]},{"text":"impl Unpin for LitByteStr","synthetic":true,"types":[]},{"text":"impl Unpin for LitChar","synthetic":true,"types":[]},{"text":"impl Unpin for LitFloat","synthetic":true,"types":[]},{"text":"impl Unpin for LitInt","synthetic":true,"types":[]},{"text":"impl Unpin for LitStr","synthetic":true,"types":[]},{"text":"impl Unpin for Macro","synthetic":true,"types":[]},{"text":"impl Unpin for DataEnum","synthetic":true,"types":[]},{"text":"impl Unpin for DataStruct","synthetic":true,"types":[]},{"text":"impl Unpin for DataUnion","synthetic":true,"types":[]},{"text":"impl Unpin for DeriveInput","synthetic":true,"types":[]},{"text":"impl Unpin for Block","synthetic":true,"types":[]},{"text":"impl Unpin for Local","synthetic":true,"types":[]},{"text":"impl Unpin for Abi","synthetic":true,"types":[]},{"text":"impl Unpin for BareFnArg","synthetic":true,"types":[]},{"text":"impl Unpin for TypeArray","synthetic":true,"types":[]},{"text":"impl Unpin for TypeBareFn","synthetic":true,"types":[]},{"text":"impl Unpin for TypeGroup","synthetic":true,"types":[]},{"text":"impl Unpin for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl Unpin for TypeInfer","synthetic":true,"types":[]},{"text":"impl Unpin for TypeMacro","synthetic":true,"types":[]},{"text":"impl Unpin for TypeNever","synthetic":true,"types":[]},{"text":"impl Unpin for TypeParen","synthetic":true,"types":[]},{"text":"impl Unpin for TypePath","synthetic":true,"types":[]},{"text":"impl Unpin for TypePtr","synthetic":true,"types":[]},{"text":"impl Unpin for TypeReference","synthetic":true,"types":[]},{"text":"impl Unpin for TypeSlice","synthetic":true,"types":[]},{"text":"impl Unpin for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl Unpin for TypeTuple","synthetic":true,"types":[]},{"text":"impl Unpin for Variadic","synthetic":true,"types":[]},{"text":"impl Unpin for FieldPat","synthetic":true,"types":[]},{"text":"impl Unpin for PatBox","synthetic":true,"types":[]},{"text":"impl Unpin for PatIdent","synthetic":true,"types":[]},{"text":"impl Unpin for PatLit","synthetic":true,"types":[]},{"text":"impl Unpin for PatMacro","synthetic":true,"types":[]},{"text":"impl Unpin for PatOr","synthetic":true,"types":[]},{"text":"impl Unpin for PatPath","synthetic":true,"types":[]},{"text":"impl Unpin for PatRange","synthetic":true,"types":[]},{"text":"impl Unpin for PatReference","synthetic":true,"types":[]},{"text":"impl Unpin for PatRest","synthetic":true,"types":[]},{"text":"impl Unpin for PatSlice","synthetic":true,"types":[]},{"text":"impl Unpin for PatStruct","synthetic":true,"types":[]},{"text":"impl Unpin for PatTuple","synthetic":true,"types":[]},{"text":"impl Unpin for PatTupleStruct","synthetic":true,"types":[]},{"text":"impl Unpin for PatType","synthetic":true,"types":[]},{"text":"impl Unpin for PatWild","synthetic":true,"types":[]},{"text":"impl Unpin for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl Unpin for Binding","synthetic":true,"types":[]},{"text":"impl Unpin for Constraint","synthetic":true,"types":[]},{"text":"impl Unpin for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl Unpin for Path","synthetic":true,"types":[]},{"text":"impl Unpin for PathSegment","synthetic":true,"types":[]},{"text":"impl Unpin for QSelf","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for AttrStyle","synthetic":true,"types":[]},{"text":"impl Unpin for Meta","synthetic":true,"types":[]},{"text":"impl Unpin for NestedMeta","synthetic":true,"types":[]},{"text":"impl Unpin for Fields","synthetic":true,"types":[]},{"text":"impl Unpin for Visibility","synthetic":true,"types":[]},{"text":"impl Unpin for GenericMethodArgument","synthetic":true,"types":[]},{"text":"impl Unpin for RangeLimits","synthetic":true,"types":[]},{"text":"impl Unpin for Expr","synthetic":true,"types":[]},{"text":"impl Unpin for Member","synthetic":true,"types":[]},{"text":"impl Unpin for GenericParam","synthetic":true,"types":[]},{"text":"impl Unpin for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl Unpin for TypeParamBound","synthetic":true,"types":[]},{"text":"impl Unpin for WherePredicate","synthetic":true,"types":[]},{"text":"impl Unpin for FnArg","synthetic":true,"types":[]},{"text":"impl Unpin for ForeignItem","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItem","synthetic":true,"types":[]},{"text":"impl Unpin for Item","synthetic":true,"types":[]},{"text":"impl Unpin for TraitItem","synthetic":true,"types":[]},{"text":"impl Unpin for UseTree","synthetic":true,"types":[]},{"text":"impl Unpin for Lit","synthetic":true,"types":[]},{"text":"impl Unpin for StrStyle","synthetic":true,"types":[]},{"text":"impl Unpin for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl Unpin for Data","synthetic":true,"types":[]},{"text":"impl Unpin for BinOp","synthetic":true,"types":[]},{"text":"impl Unpin for UnOp","synthetic":true,"types":[]},{"text":"impl Unpin for Stmt","synthetic":true,"types":[]},{"text":"impl Unpin for ReturnType","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for Pat","synthetic":true,"types":[]},{"text":"impl Unpin for GenericArgument","synthetic":true,"types":[]},{"text":"impl Unpin for PathArguments","synthetic":true,"types":[]},{"text":"impl Unpin for Underscore","synthetic":true,"types":[]},{"text":"impl Unpin for Abstract","synthetic":true,"types":[]},{"text":"impl Unpin for As","synthetic":true,"types":[]},{"text":"impl Unpin for Async","synthetic":true,"types":[]},{"text":"impl Unpin for Auto","synthetic":true,"types":[]},{"text":"impl Unpin for Await","synthetic":true,"types":[]},{"text":"impl Unpin for Become","synthetic":true,"types":[]},{"text":"impl Unpin for Box","synthetic":true,"types":[]},{"text":"impl Unpin for Break","synthetic":true,"types":[]},{"text":"impl Unpin for Const","synthetic":true,"types":[]},{"text":"impl Unpin for Continue","synthetic":true,"types":[]},{"text":"impl Unpin for Crate","synthetic":true,"types":[]},{"text":"impl Unpin for Default","synthetic":true,"types":[]},{"text":"impl Unpin for Do","synthetic":true,"types":[]},{"text":"impl Unpin for Dyn","synthetic":true,"types":[]},{"text":"impl Unpin for Else","synthetic":true,"types":[]},{"text":"impl Unpin for Enum","synthetic":true,"types":[]},{"text":"impl Unpin for Extern","synthetic":true,"types":[]},{"text":"impl Unpin for Final","synthetic":true,"types":[]},{"text":"impl Unpin for Fn","synthetic":true,"types":[]},{"text":"impl Unpin for For","synthetic":true,"types":[]},{"text":"impl Unpin for If","synthetic":true,"types":[]},{"text":"impl Unpin for Impl","synthetic":true,"types":[]},{"text":"impl Unpin for In","synthetic":true,"types":[]},{"text":"impl Unpin for Let","synthetic":true,"types":[]},{"text":"impl Unpin for Loop","synthetic":true,"types":[]},{"text":"impl Unpin for Macro","synthetic":true,"types":[]},{"text":"impl Unpin for Match","synthetic":true,"types":[]},{"text":"impl Unpin for Mod","synthetic":true,"types":[]},{"text":"impl Unpin for Move","synthetic":true,"types":[]},{"text":"impl Unpin for Mut","synthetic":true,"types":[]},{"text":"impl Unpin for Override","synthetic":true,"types":[]},{"text":"impl Unpin for Priv","synthetic":true,"types":[]},{"text":"impl Unpin for Pub","synthetic":true,"types":[]},{"text":"impl Unpin for Ref","synthetic":true,"types":[]},{"text":"impl Unpin for Return","synthetic":true,"types":[]},{"text":"impl Unpin for SelfType","synthetic":true,"types":[]},{"text":"impl Unpin for SelfValue","synthetic":true,"types":[]},{"text":"impl Unpin for Static","synthetic":true,"types":[]},{"text":"impl Unpin for Struct","synthetic":true,"types":[]},{"text":"impl Unpin for Super","synthetic":true,"types":[]},{"text":"impl Unpin for Trait","synthetic":true,"types":[]},{"text":"impl Unpin for Try","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for Typeof","synthetic":true,"types":[]},{"text":"impl Unpin for Union","synthetic":true,"types":[]},{"text":"impl Unpin for Unsafe","synthetic":true,"types":[]},{"text":"impl Unpin for Unsized","synthetic":true,"types":[]},{"text":"impl Unpin for Use","synthetic":true,"types":[]},{"text":"impl Unpin for Virtual","synthetic":true,"types":[]},{"text":"impl Unpin for Where","synthetic":true,"types":[]},{"text":"impl Unpin for While","synthetic":true,"types":[]},{"text":"impl Unpin for Yield","synthetic":true,"types":[]},{"text":"impl Unpin for Add","synthetic":true,"types":[]},{"text":"impl Unpin for AddEq","synthetic":true,"types":[]},{"text":"impl Unpin for And","synthetic":true,"types":[]},{"text":"impl Unpin for AndAnd","synthetic":true,"types":[]},{"text":"impl Unpin for AndEq","synthetic":true,"types":[]},{"text":"impl Unpin for At","synthetic":true,"types":[]},{"text":"impl Unpin for Bang","synthetic":true,"types":[]},{"text":"impl Unpin for Caret","synthetic":true,"types":[]},{"text":"impl Unpin for CaretEq","synthetic":true,"types":[]},{"text":"impl Unpin for Colon","synthetic":true,"types":[]},{"text":"impl Unpin for Colon2","synthetic":true,"types":[]},{"text":"impl Unpin for Comma","synthetic":true,"types":[]},{"text":"impl Unpin for Div","synthetic":true,"types":[]},{"text":"impl Unpin for DivEq","synthetic":true,"types":[]},{"text":"impl Unpin for Dollar","synthetic":true,"types":[]},{"text":"impl Unpin for Dot","synthetic":true,"types":[]},{"text":"impl Unpin for Dot2","synthetic":true,"types":[]},{"text":"impl Unpin for Dot3","synthetic":true,"types":[]},{"text":"impl Unpin for DotDotEq","synthetic":true,"types":[]},{"text":"impl Unpin for Eq","synthetic":true,"types":[]},{"text":"impl Unpin for EqEq","synthetic":true,"types":[]},{"text":"impl Unpin for Ge","synthetic":true,"types":[]},{"text":"impl Unpin for Gt","synthetic":true,"types":[]},{"text":"impl Unpin for Le","synthetic":true,"types":[]},{"text":"impl Unpin for Lt","synthetic":true,"types":[]},{"text":"impl Unpin for MulEq","synthetic":true,"types":[]},{"text":"impl Unpin for Ne","synthetic":true,"types":[]},{"text":"impl Unpin for Or","synthetic":true,"types":[]},{"text":"impl Unpin for OrEq","synthetic":true,"types":[]},{"text":"impl Unpin for OrOr","synthetic":true,"types":[]},{"text":"impl Unpin for Pound","synthetic":true,"types":[]},{"text":"impl Unpin for Question","synthetic":true,"types":[]},{"text":"impl Unpin for RArrow","synthetic":true,"types":[]},{"text":"impl Unpin for LArrow","synthetic":true,"types":[]},{"text":"impl Unpin for Rem","synthetic":true,"types":[]},{"text":"impl Unpin for RemEq","synthetic":true,"types":[]},{"text":"impl Unpin for FatArrow","synthetic":true,"types":[]},{"text":"impl Unpin for Semi","synthetic":true,"types":[]},{"text":"impl Unpin for Shl","synthetic":true,"types":[]},{"text":"impl Unpin for ShlEq","synthetic":true,"types":[]},{"text":"impl Unpin for Shr","synthetic":true,"types":[]},{"text":"impl Unpin for ShrEq","synthetic":true,"types":[]},{"text":"impl Unpin for Star","synthetic":true,"types":[]},{"text":"impl Unpin for Sub","synthetic":true,"types":[]},{"text":"impl Unpin for SubEq","synthetic":true,"types":[]},{"text":"impl Unpin for Tilde","synthetic":true,"types":[]},{"text":"impl Unpin for Brace","synthetic":true,"types":[]},{"text":"impl Unpin for Bracket","synthetic":true,"types":[]},{"text":"impl Unpin for Paren","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Unpin for Pairs&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Unpin for PairsMut&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; Unpin for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Nothing","synthetic":true,"types":[]}];
implementors["textwrap"] = [{"text":"impl Unpin for HyphenSplitter","synthetic":true,"types":[]},{"text":"impl Unpin for NoHyphenation","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Unpin for Wrapper&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Unpin for IntoWrapIter&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'w, 'a, S&gt; Unpin for WrapIter&lt;'w, 'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'a: 'w,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["toml"] = [{"text":"impl&lt;K, V&gt; Unpin for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Value","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Serializer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Deserializer&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["unicode_segmentation"] = [{"text":"impl&lt;'a&gt; Unpin for Graphemes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for GraphemeIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for GraphemeCursor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UWordBounds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UWordBoundIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UnicodeWords&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for USentenceBounds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for USentenceBoundIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UnicodeSentences&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for GraphemeIncomplete","synthetic":true,"types":[]}];
implementors["vec_map"] = [{"text":"impl&lt;V&gt; Unpin for VecMap&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for VacantEntry&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for OccupiedEntry&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for Iter&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for IterMut&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for Keys&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for Values&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for ValuesMut&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; Unpin for IntoIter&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for Drain&lt;'a, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; Unpin for Entry&lt;'a, V&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()