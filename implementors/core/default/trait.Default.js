(function() {var implementors = {};
implementors["ansi_term"] = [{"text":"impl Default for Style","synthetic":false,"types":[]}];
implementors["anyhow"] = [{"text":"impl&lt;'_&gt; Default for Chain&lt;'_&gt;","synthetic":false,"types":[]}];
implementors["clap"] = [{"text":"impl&lt;'a, 'b&gt; Default for Arg&lt;'a, 'b&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'a: 'b,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for ArgMatches&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for Values&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for OsValues&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for ArgGroup&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["futures_executor"] = [{"text":"impl Default for LocalPool","synthetic":false,"types":[]}];
implementors["futures_util"] = [{"text":"impl&lt;Fut:&nbsp;Future&gt; Default for FuturesOrdered&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut&gt; Default for FuturesUnordered&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St:&nbsp;Stream + Unpin&gt; Default for SelectAll&lt;St&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for Mutex&lt;T&gt;","synthetic":false,"types":[]}];
implementors["glib"] = [{"text":"impl&lt;T:&nbsp;ObjectType&gt; Default for WeakRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;ObjectType&gt; Default for SendWeakRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Default for KeyFile","synthetic":false,"types":[]},{"text":"impl Default for MainContext","synthetic":false,"types":[]},{"text":"impl Default for ByteArray","synthetic":false,"types":[]},{"text":"impl Default for String","synthetic":false,"types":[]},{"text":"impl Default for Inhibit","synthetic":false,"types":[]},{"text":"impl Default for Priority","synthetic":false,"types":[]},{"text":"impl Default for VariantDict","synthetic":false,"types":[]},{"text":"impl Default for Date","synthetic":false,"types":[]}];
implementors["gstreamer"] = [{"text":"impl Default for Bus","synthetic":false,"types":[]},{"text":"impl Default for TagList","synthetic":false,"types":[]},{"text":"impl Default for Buffer","synthetic":false,"types":[]},{"text":"impl Default for BufferList","synthetic":false,"types":[]},{"text":"impl Default for Latency&lt;Query&gt;","synthetic":false,"types":[]},{"text":"impl Default for Formats&lt;Query&gt;","synthetic":false,"types":[]},{"text":"impl Default for Uri&lt;Query&gt;","synthetic":false,"types":[]},{"text":"impl Default for Scheduling&lt;Query&gt;","synthetic":false,"types":[]},{"text":"impl Default for Drain&lt;Query&gt;","synthetic":false,"types":[]},{"text":"impl Default for ClockTime","synthetic":false,"types":[]},{"text":"impl Default for DeviceMonitor","synthetic":false,"types":[]},{"text":"impl Default for ParseContext","synthetic":false,"types":[]},{"text":"impl Default for Undefined","synthetic":false,"types":[]},{"text":"impl Default for Default","synthetic":false,"types":[]},{"text":"impl Default for Bytes","synthetic":false,"types":[]},{"text":"impl Default for Buffers","synthetic":false,"types":[]},{"text":"impl Default for Percent","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;FormattedValue&gt; Default for FormattedSegment&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Default for BufferPool","synthetic":false,"types":[]}];
implementors["lock_api"] = [{"text":"impl&lt;R:&nbsp;RawMutex, T:&nbsp;?Sized + Default&gt; Default for Mutex&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawMutex, G:&nbsp;GetThreadId, T:&nbsp;?Sized + Default&gt; Default for ReentrantMutex&lt;R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawRwLock, T:&nbsp;?Sized + Default&gt; Default for RwLock&lt;R, T&gt;","synthetic":false,"types":[]}];
implementors["once_cell"] = [{"text":"impl&lt;T&gt; Default for OnceCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for Lazy&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for OnceCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for Lazy&lt;T&gt;","synthetic":false,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Default for Condvar","synthetic":false,"types":[]},{"text":"impl Default for Once","synthetic":false,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Default for UnparkResult","synthetic":false,"types":[]},{"text":"impl Default for SpinWait","synthetic":false,"types":[]}];
implementors["pretty_hex"] = [{"text":"impl Default for HexConfig","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Default for TokenStream","synthetic":false,"types":[]}];
implementors["pyo3"] = [{"text":"impl Default for PyObjectMethods","synthetic":false,"types":[]},{"text":"impl Default for PyDescrMethods","synthetic":false,"types":[]},{"text":"impl Default for PyGCMethods","synthetic":false,"types":[]},{"text":"impl Default for PyIterMethods","synthetic":false,"types":[]},{"text":"impl Default for PyNumberMethods","synthetic":false,"types":[]},{"text":"impl Default for PySequenceMethods","synthetic":false,"types":[]},{"text":"impl Default for PyMappingMethods","synthetic":false,"types":[]},{"text":"impl Default for PyAsyncMethods","synthetic":false,"types":[]},{"text":"impl Default for PyBufferProcs","synthetic":false,"types":[]},{"text":"impl Default for PyHeapTypeObject","synthetic":false,"types":[]},{"text":"impl Default for PyType_Slot","synthetic":false,"types":[]},{"text":"impl Default for PyType_Spec","synthetic":false,"types":[]},{"text":"impl Default for PyObjectArenaAllocator","synthetic":false,"types":[]},{"text":"impl Default for PyHash_FuncDef","synthetic":false,"types":[]},{"text":"impl Default for PyMethodDef","synthetic":false,"types":[]}];
implementors["pyo3_derive_backend"] = [{"text":"impl Default for PyClassArgs","synthetic":false,"types":[]},{"text":"impl Default for PyFunctionAttr","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl Default for IgnoredAny","synthetic":false,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; Default for Slab&lt;T&gt;","synthetic":false,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; Default for SmallVec&lt;A&gt;","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Default for Underscore","synthetic":false,"types":[]},{"text":"impl Default for Abstract","synthetic":false,"types":[]},{"text":"impl Default for As","synthetic":false,"types":[]},{"text":"impl Default for Async","synthetic":false,"types":[]},{"text":"impl Default for Auto","synthetic":false,"types":[]},{"text":"impl Default for Await","synthetic":false,"types":[]},{"text":"impl Default for Become","synthetic":false,"types":[]},{"text":"impl Default for Box","synthetic":false,"types":[]},{"text":"impl Default for Break","synthetic":false,"types":[]},{"text":"impl Default for Const","synthetic":false,"types":[]},{"text":"impl Default for Continue","synthetic":false,"types":[]},{"text":"impl Default for Crate","synthetic":false,"types":[]},{"text":"impl Default for Default","synthetic":false,"types":[]},{"text":"impl Default for Do","synthetic":false,"types":[]},{"text":"impl Default for Dyn","synthetic":false,"types":[]},{"text":"impl Default for Else","synthetic":false,"types":[]},{"text":"impl Default for Enum","synthetic":false,"types":[]},{"text":"impl Default for Extern","synthetic":false,"types":[]},{"text":"impl Default for Final","synthetic":false,"types":[]},{"text":"impl Default for Fn","synthetic":false,"types":[]},{"text":"impl Default for For","synthetic":false,"types":[]},{"text":"impl Default for If","synthetic":false,"types":[]},{"text":"impl Default for Impl","synthetic":false,"types":[]},{"text":"impl Default for In","synthetic":false,"types":[]},{"text":"impl Default for Let","synthetic":false,"types":[]},{"text":"impl Default for Loop","synthetic":false,"types":[]},{"text":"impl Default for Macro","synthetic":false,"types":[]},{"text":"impl Default for Match","synthetic":false,"types":[]},{"text":"impl Default for Mod","synthetic":false,"types":[]},{"text":"impl Default for Move","synthetic":false,"types":[]},{"text":"impl Default for Mut","synthetic":false,"types":[]},{"text":"impl Default for Override","synthetic":false,"types":[]},{"text":"impl Default for Priv","synthetic":false,"types":[]},{"text":"impl Default for Pub","synthetic":false,"types":[]},{"text":"impl Default for Ref","synthetic":false,"types":[]},{"text":"impl Default for Return","synthetic":false,"types":[]},{"text":"impl Default for SelfType","synthetic":false,"types":[]},{"text":"impl Default for SelfValue","synthetic":false,"types":[]},{"text":"impl Default for Static","synthetic":false,"types":[]},{"text":"impl Default for Struct","synthetic":false,"types":[]},{"text":"impl Default for Super","synthetic":false,"types":[]},{"text":"impl Default for Trait","synthetic":false,"types":[]},{"text":"impl Default for Try","synthetic":false,"types":[]},{"text":"impl Default for Type","synthetic":false,"types":[]},{"text":"impl Default for Typeof","synthetic":false,"types":[]},{"text":"impl Default for Union","synthetic":false,"types":[]},{"text":"impl Default for Unsafe","synthetic":false,"types":[]},{"text":"impl Default for Unsized","synthetic":false,"types":[]},{"text":"impl Default for Use","synthetic":false,"types":[]},{"text":"impl Default for Virtual","synthetic":false,"types":[]},{"text":"impl Default for Where","synthetic":false,"types":[]},{"text":"impl Default for While","synthetic":false,"types":[]},{"text":"impl Default for Yield","synthetic":false,"types":[]},{"text":"impl Default for Add","synthetic":false,"types":[]},{"text":"impl Default for AddEq","synthetic":false,"types":[]},{"text":"impl Default for And","synthetic":false,"types":[]},{"text":"impl Default for AndAnd","synthetic":false,"types":[]},{"text":"impl Default for AndEq","synthetic":false,"types":[]},{"text":"impl Default for At","synthetic":false,"types":[]},{"text":"impl Default for Bang","synthetic":false,"types":[]},{"text":"impl Default for Caret","synthetic":false,"types":[]},{"text":"impl Default for CaretEq","synthetic":false,"types":[]},{"text":"impl Default for Colon","synthetic":false,"types":[]},{"text":"impl Default for Colon2","synthetic":false,"types":[]},{"text":"impl Default for Comma","synthetic":false,"types":[]},{"text":"impl Default for Div","synthetic":false,"types":[]},{"text":"impl Default for DivEq","synthetic":false,"types":[]},{"text":"impl Default for Dollar","synthetic":false,"types":[]},{"text":"impl Default for Dot","synthetic":false,"types":[]},{"text":"impl Default for Dot2","synthetic":false,"types":[]},{"text":"impl Default for Dot3","synthetic":false,"types":[]},{"text":"impl Default for DotDotEq","synthetic":false,"types":[]},{"text":"impl Default for Eq","synthetic":false,"types":[]},{"text":"impl Default for EqEq","synthetic":false,"types":[]},{"text":"impl Default for Ge","synthetic":false,"types":[]},{"text":"impl Default for Gt","synthetic":false,"types":[]},{"text":"impl Default for Le","synthetic":false,"types":[]},{"text":"impl Default for Lt","synthetic":false,"types":[]},{"text":"impl Default for MulEq","synthetic":false,"types":[]},{"text":"impl Default for Ne","synthetic":false,"types":[]},{"text":"impl Default for Or","synthetic":false,"types":[]},{"text":"impl Default for OrEq","synthetic":false,"types":[]},{"text":"impl Default for OrOr","synthetic":false,"types":[]},{"text":"impl Default for Pound","synthetic":false,"types":[]},{"text":"impl Default for Question","synthetic":false,"types":[]},{"text":"impl Default for RArrow","synthetic":false,"types":[]},{"text":"impl Default for LArrow","synthetic":false,"types":[]},{"text":"impl Default for Rem","synthetic":false,"types":[]},{"text":"impl Default for RemEq","synthetic":false,"types":[]},{"text":"impl Default for FatArrow","synthetic":false,"types":[]},{"text":"impl Default for Semi","synthetic":false,"types":[]},{"text":"impl Default for Shl","synthetic":false,"types":[]},{"text":"impl Default for ShlEq","synthetic":false,"types":[]},{"text":"impl Default for Shr","synthetic":false,"types":[]},{"text":"impl Default for ShrEq","synthetic":false,"types":[]},{"text":"impl Default for Star","synthetic":false,"types":[]},{"text":"impl Default for Sub","synthetic":false,"types":[]},{"text":"impl Default for SubEq","synthetic":false,"types":[]},{"text":"impl Default for Tilde","synthetic":false,"types":[]},{"text":"impl Default for Brace","synthetic":false,"types":[]},{"text":"impl Default for Bracket","synthetic":false,"types":[]},{"text":"impl Default for Paren","synthetic":false,"types":[]},{"text":"impl Default for Group","synthetic":false,"types":[]},{"text":"impl Default for Generics","synthetic":false,"types":[]},{"text":"impl Default for BoundLifetimes","synthetic":false,"types":[]},{"text":"impl Default for PathArguments","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Default for Punctuated&lt;T, P&gt;","synthetic":false,"types":[]}];
implementors["toml"] = [{"text":"impl Default for Map&lt;String, Value&gt;","synthetic":false,"types":[]}];
implementors["vec_map"] = [{"text":"impl&lt;V&gt; Default for VecMap&lt;V&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()